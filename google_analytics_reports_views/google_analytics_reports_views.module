<?php

/**
 * @file
 * Main file for Google Analytics Reports Views module.
 */

/**
 * Implements hook_views_api().
 */
function google_analytics_reports_views_views_api() {
  return array(
    'api' => '3',
    'path' => drupal_get_path('module', 'google_analytics_reports_views'),
  );
}

/**
 * Google Analytics dimensions and metrics.
 * @see https://developers.google.com/analytics/devguides/reporting/core/dimsmets
 */
function google_analytics_reports_views_get_fields() {
  return array(
    // User dimensions.
    'userType' => array(
      'type' => 'dimension',
      'group' => t('User dimensions'),
      'name' => t('User Type'),
      'description' => t('A boolean indicating if a user is new or returning. Possible values: <code>New Visitor</code>, <code>Returning Visitor</code>.'),
      'datatype' => 'string',
    ),
    'sessionCount' => array(
      'type' => 'dimension',
      'group' => t('User dimensions'),
      'name' => t('Count of Sessions'),
      'description' => t('The session index for a user to your property. Each session from a unique user will get its own incremental index starting from 1 for the first session. Subsequent sessions do not change previous session indicies. For example, if a certain user has 4 sessions to your website, sessionCount for that user will have 4 distinct values of 1 through 4.'),
      'datatype' => 'string',
    ),
    'daysSinceLastSession' => array(
      'type' => 'dimension',
      'group' => t('User dimensions'),
      'name' => t('Days Since Last Session'),
      'description' => t('The number of days elapsed since users last visited your property. Used to calculate user loyalty.'),
      'datatype' => 'string',
    ),
    'userDefinedValue' => array(
      'type' => 'dimension',
      'group' => t('User dimensions'),
      'name' => t('User Defined Value'),
      'description' => t('The value provided when you define custom visitor segments for your website.'),
      'datatype' => 'string',
    ),
    // User metrics.
    'users' => array(
      'type' => 'metric',
      'group' => t('User metrics'),
      'name' => t('Users'),
      'description' => t('Total number of users to your property for the requested time period.'),
      'datatype' => 'integer',
    ),
    'newUsers' => array(
      'type' => 'metric',
      'group' => t('User metrics'),
      'name' => t('New Users'),
      'description' => t('The number of users whose session on your property was marked as a first-time session.'),
      'datatype' => 'integer',
    ),
    // User calculated metrics.
    'percentNewSessions' => array(
      'type' => 'metric',
      'group' => t('User calculated metrics'),
      'name' => t('% New Sessions'),
      'description' => t('The percentage of sessions by people who had never visited your property before.'),
      'calculation' => 'ga:newUsers / ga:sessions',
      'datatype' => 'percent',
    ),
    // Session dimensions.
    'sessionDurationBucket' => array(
      'type' => 'dimension',
      'group' => t('Session dimensions'),
      'name' => t('Session Duration'),
      'description' => t('The length of a session on your property measured in seconds and reported in second increments. The value returned is a string.'),
      'datatype' => 'string',
    ),
    // Session metrics.
    'sessions' => array(
      'type' => 'metric',
      'group' => t('Session metrics'),
      'name' => t('Sessions'),
      'description' => t('Counts the total number of sessions.'),
      'datatype' => 'integer',
    ),
    'bounces' => array(
      'type' => 'metric',
      'group' => t('Session metrics'),
      'name' => t('Bounces'),
      'description' => t('The total number of single page (or single engagement hit) sessions for your property.'),
      'datatype' => 'integer',
    ),
    'sessionDuration' => array(
      'type' => 'metric',
      'group' => t('Session metrics'),
      'name' => t('Session Duration'),
      'description' => t('The total duration of user sessions represented in total seconds.'),
      'datatype' => 'time',
    ),
    'hits' => array(
      'type' => 'metric',
      'group' => t('Session metrics'),
      'name' => t('Hits'),
      'description' => t('Total number of hits sent to Google Analytics. This metric sums all hit types (e.g. pageview, event, timing, etc.).'),
      'datatype' => 'integer',
    ),
    // Session calculated metrics.
    'bounceRate' => array(
      'type' => 'metric',
      'group' => t('Session calculated metrics'),
      'name' => t('Bounce Rate'),
      'description' => t('The percentage of single-page session (i.e., session in which the person left your property from the first page).'),
      'calculation' => 'ga:bounces / ga:sessions',
      'datatype' => 'percent',
    ),
    'avgSessionDuration' => array(
      'type' => 'metric',
      'group' => t('Session calculated metrics'),
      'name' => t('Avg. Session Duration'),
      'description' => t('The average duration of user sessions represented in total seconds.'),
      'calculation' => 'ga:sessionDuration / ga:sessions',
      'datatype' => 'time',
    ),
    // Traffic sources dimensions.
    'referralPath' => array(
      'type' => 'dimension',
      'group' => t('Traffic sources dimensions'),
      'name' => t('Referral Path'),
      'description' => t('The path of the referring URL (e.g. <code>document.referrer</code>). If someone places a link to your property on their website, this element contains the path of the page that contains the referring link.'),
      'datatype' => 'string',
    ),
    'fullReferrer' => array(
      'type' => 'dimension',
      'group' => t('Traffic sources dimensions'),
      'name' => t('Full Referrer'),
      'description' => t('The full referring URL including the hostname and path.'),
      'datatype' => 'string',
    ),
    'campaign' => array(
      'type' => 'dimension',
      'group' => t('Traffic sources dimensions'),
      'name' => t('Campaign'),
      'description' => t('When using manual campaign tracking, the value of the <code>utm_campaign</code> campaign tracking parameter. When using AdWords autotagging, the name(s) of the online ad campaign that you use for your property. Otherwise the value <code>(not set)</code> is used.'),
      'datatype' => 'string',
    ),
    'source' => array(
      'type' => 'dimension',
      'group' => t('Traffic sources dimensions'),
      'name' => t('Source'),
      'description' => t('The source of referrals to your property. When using manual campaign tracking, the value of the <code>utm_source</code> campaign tracking parameter. When using AdWords autotagging, the value is <code>google</code>. Otherwise the domain of the source referring the user to your property (e.g. <code>document.referrer</code>). The value may also contain a port address. If the user arrived without a referrer, the value is <code>(direct)</code>.'),
      'datatype' => 'string',
    ),
    'medium' => array(
      'type' => 'dimension',
      'group' => t('Traffic sources dimensions'),
      'name' => t('Medium'),
      'description' => t('The type of referrals to your property. When using manual campaign tracking, the value of the <code>utm_medium</code> campaign tracking parameter. When using AdWords autotagging, the value is <code>ppc</code>. If the user comes from a search engine detected by Google Analytics, the value is <code>organic</code>. If the referrer is not a search engine, the value is <code>referral</code>. If the users came directly to the property, and <code>document.referrer</code> is empty, the value is <code>(none)</code>.'),
      'datatype' => 'string',
    ),
    'sourceMedium' => array(
      'type' => 'dimension',
      'group' => t('Traffic sources dimensions'),
      'name' => t('Source / Medium'),
      'description' => t('Combined values of <code>ga:source</code> and <code>ga:medium</code>.'),
      'datatype' => 'string',
    ),
    'keyword' => array(
      'type' => 'dimension',
      'group' => t('Traffic sources dimensions'),
      'name' => t('Keyword'),
      'description' => t('When using manual campaign tracking, the value of the <code>utm_term</code> campaign tracking parameter. When using AdWords autotagging or if a user used organic search to reach your property, the keywords used by users to reach your property. Otherwise the value is <code>(not set)</code>.'),
      'datatype' => 'string',
    ),
    'adContent' => array(
      'type' => 'dimension',
      'group' => t('Traffic sources dimensions'),
      'name' => t('Ad Content'),
      'description' => t('When using manual campaign tracking, the value of the <code>utm_content</code> campaign tracking parameter. When using AdWords autotagging, the first line of the text for your online Ad campaign. If you are using mad libs for your AdWords content, this field displays the keywords you provided for the mad libs keyword match. Otherwise the value is <code>(not set)</code>.'),
      'datatype' => 'string',
    ),
    'socialNetwork' => array(
      'type' => 'dimension',
      'group' => t('Traffic sources dimensions'),
      'name' => t('Social Network'),
      'description' => t('Name of the social network. This can be related to the referring social network for traffic sources, or to the social network for social data hub activities. E.g. Google+, Blogger, etc.'),
      'datatype' => 'string',
    ),
    'hasSocialSourceReferral' => array(
      'type' => 'dimension',
      'group' => t('Traffic sources dimensions'),
      'name' => t('Social Source Referral'),
      'description' => t('Indicates sessions that arrived to the property from a social source. The possible values are <code>Yes</code> or <code>No</code> where the first letter is capitalized.'),
      'datatype' => 'string',
    ),
    'campaignCode' => array(
      'type' => 'dimension',
      'group' => t('Traffic sources dimensions'),
      'name' => t('Campaign Code'),
      'description' => t('When using manual campaign tracking, the value of the utm_id campaign tracking parameter.'),
      'datatype' => 'string',
    ),
    // Traffic sources metrics.
    'organicSearches' => array(
      'type' => 'metric',
      'group' => t('Traffic sources metrics'),
      'name' => t('Organic Searches'),
      'description' => t('The number of organic searches that happened within a session. This metric is search engine agnostic.'),
      'datatype' => 'integer',
    ),
    // Adwords dimensions.
    'adGroup' => array(
      'type' => 'dimension',
      'group' => t('AdWords dimensions'),
      'name' => t('Ad Group'),
      'description' => t('The name of your AdWords ad group.'),
      'datatype' => 'string',
    ),
    'adSlot' => array(
      'type' => 'dimension',
      'group' => t('AdWords dimensions'),
      'name' => t('Ad Slot'),
      'description' => t('The location of the advertisement on the hosting page (Top, RHS, or not set).'),
      'datatype' => 'string',
    ),
    'adSlotPosition' => array(
      'type' => 'dimension',
      'group' => t('AdWords dimensions'),
      'name' => t('Ad Slot Position'),
      'description' => t('The ad slot positions in which your AdWords ads appeared (1-8).'),
      'datatype' => 'string',
    ),
    'adDistributionNetwork' => array(
      'type' => 'dimension',
      'group' => t('AdWords dimensions'),
      'name' => t('Ad Distribution Network'),
      'description' => t('The networks used to deliver your ads (Content, Search, Search partners, etc.).'),
      'datatype' => 'string',
    ),
    'adMatchType' => array(
      'type' => 'dimension',
      'group' => t('AdWords dimensions'),
      'name' => t('Query Match Type'),
      'description' => t('The match types applied for the search term the user had input (Phrase, Exact, Broad, etc.). Ads on the content network are identified as <code>Content network</code>. Details: <a href="!url">@url</a>.', array('@url' => 'https://support.google.com/adwords/answer/2472708')),
      'datatype' => 'string',
    ),
    'adKeywordMatchType' => array(
      'type' => 'dimension',
      'group' => t('AdWords dimensions'),
      'name' => t('Keyword Match Type'),
      'description' => t('The match types applied to your keywords (Phrase, Exact, Broad). Details: <a href="!url">@url</a>.', array('@url' => 'https://support.google.com/adwords/answer/2472708')),
      'datatype' => 'string',
    ),
    'adMatchedQuery' => array(
      'type' => 'dimension',
      'group' => t('AdWords dimensions'),
      'name' => t('Matched Search Query'),
      'description' => t('The search queries that triggered impressions of your AdWords ads.'),
      'datatype' => 'string',
    ),
    'adPlacementDomain' => array(
      'type' => 'dimension',
      'group' => t('AdWords dimensions'),
      'name' => t('Placement Domain'),
      'description' => t('The domains where your ads on the content network were placed.'),
      'datatype' => 'string',
    ),
    'adPlacementUrl' => array(
      'type' => 'dimension',
      'group' => t('AdWords dimensions'),
      'name' => t('Placement URL'),
      'description' => t('The URLs where your ads on the content network were placed.'),
      'datatype' => 'string',
    ),
    'adFormat' => array(
      'type' => 'dimension',
      'group' => t('AdWords dimensions'),
      'name' => t('Ad Format'),
      'description' => t('Your AdWords ad formats (Text, Image, Flash, Video, etc.).'),
      'datatype' => 'string',
    ),
    'adTargetingType' => array(
      'type' => 'dimension',
      'group' => t('AdWords dimensions'),
      'name' => t('Targeting Type'),
      'description' => t('How your AdWords ads were targeted (keyword, placement, and vertical targeting, etc.).'),
      'datatype' => 'string',
    ),
    'adTargetingOption' => array(
      'type' => 'dimension',
      'group' => t('AdWords dimensions'),
      'name' => t('Placement Type'),
      'description' => t('How you manage your ads on the content network. Values are Automatic placements or Managed placements.'),
      'datatype' => 'string',
    ),
    'adDisplayUrl' => array(
      'type' => 'dimension',
      'group' => t('AdWords dimensions'),
      'name' => t('Display URL'),
      'description' => t('The URLs your AdWords ads displayed.'),
      'datatype' => 'string',
    ),
    'adDestinationUrl' => array(
      'type' => 'dimension',
      'group' => t('AdWords dimensions'),
      'name' => t('Destination URL'),
      'description' => t('The URLs to which your AdWords ads referred traffic.'),
      'datatype' => 'string',
    ),
    'adwordsCustomerId' => array(
      'type' => 'dimension',
      'group' => t('AdWords dimensions'),
      'name' => t('AdWords Customer ID'),
      'description' => t('A string. Corresponds to AdWords API AccountInfo.customerId.'),
      'datatype' => 'string',
    ),
    'adwordsCampaignId' => array(
      'type' => 'dimension',
      'group' => t('AdWords dimensions'),
      'name' => t('AdWords Campaign ID'),
      'description' => t('A string. Corresponds to AdWords API Campaign.id.'),
      'datatype' => 'string',
    ),
    'adwordsAdGroupId' => array(
      'type' => 'dimension',
      'group' => t('AdWords dimensions'),
      'name' => t('AdWords Ad Group ID'),
      'description' => t('A string. Corresponds to AdWords API AdGroup.id.'),
      'datatype' => 'string',
    ),
    'adwordsCreativeId' => array(
      'type' => 'dimension',
      'group' => t('AdWords dimensions'),
      'name' => t('AdWords Creative ID'),
      'description' => t('A string. Corresponds to AdWords API Ad.id.'),
      'datatype' => 'string',
    ),
    'adwordsCriteriaId' => array(
      'type' => 'dimension',
      'group' => t('AdWords dimensions'),
      'name' => t('AdWords Criteria ID'),
      'description' => t('A string. Corresponds to AdWords API Criterion.id.'),
      'datatype' => 'string',
    ),
    'isTrueViewVideoAd' => array(
      'type' => 'dimension',
      'group' => t('AdWords dimensions'),
      'name' => t('TrueView Video Ad'),
      'description' => t('<code>Yes</code> or <code>No</code> - Indicates whether the ad is an AdWords TrueView video ad.'),
      'datatype' => 'string',
    ),
    // Adwords metrics.
    'impressions' => array(
      'type' => 'metric',
      'group' => t('AdWords metrics'),
      'name' => t('Impressions'),
      'description' => t('Total number of campaign impressions.'),
      'datatype' => 'integer',
    ),
    'adClicks' => array(
      'type' => 'metric',
      'group' => t('AdWords metrics'),
      'name' => t('Clicks'),
      'description' => t('The total number of times users have clicked on an ad to reach your property.'),
      'datatype' => 'integer',
    ),
    'adCost' => array(
      'type' => 'metric',
      'group' => t('AdWords metrics'),
      'name' => t('Cost'),
      'description' => t('Derived cost for the advertising campaign. The currency for this value is based on the currency that you set in your AdWords account.'),
      'datatype' => 'currency',
    ),
    // Adwords calculated metrics.
    'CPM' => array(
      'type' => 'metric',
      'group' => t('AdWords calculated metrics'),
      'name' => t('CPM'),
      'description' => t('Cost per thousand impressions.'),
      'calculation' => 'ga:adCost / (ga:impressions / 1000)',
      'datatype' => 'currency',
    ),
    'CPC' => array(
      'type' => 'metric',
      'group' => t('AdWords calculated metrics'),
      'name' => t('CPC'),
      'description' => t('Cost to advertiser per click.'),
      'calculation' => 'ga:adCost / ga:adClicks',
      'datatype' => 'currency',
    ),
    'CTR' => array(
      'type' => 'metric',
      'group' => t('AdWords calculated metrics'),
      'name' => t('CTR'),
      'description' => t('Click-through-rate for your ad. This is equal to the number of clicks divided by the number of impressions for your ad (e.g. how many times users clicked on one of your ads where that ad appeared).'),
      'calculation' => 'ga:adClicks / ga:impressions',
      'datatype' => 'percent',
    ),
    'costPerTransaction' => array(
      'type' => 'metric',
      'group' => t('AdWords calculated metrics'),
      'name' => t('Cost per Transaction'),
      'description' => t('The cost per transaction for your property.'),
      'calculation' => '(ga:adCost) / (ga:transactions)',
      'datatype' => 'currency',
    ),
    'costPerGoalConversion' => array(
      'type' => 'metric',
      'group' => t('AdWords calculated metrics'),
      'name' => t('Cost per Goal Conversion'),
      'description' => t('The cost per goal conversion for your site.'),
      'calculation' => 'ga:adCost / ga:goalCompletionsAl',
      'datatype' => 'currency',
    ),
    'costPerConversion' => array(
      'type' => 'metric',
      'group' => t('AdWords calculated metrics'),
      'name' => t('Cost per Goal Conversion'),
      'description' => t('The cost per goal conversion for your property.'),
      'calculation' => '(ga:adCost) / (ga:goalCompletionsAll)',
      'datatype' => 'currency',
    ),
    'RPC' => array(
      'type' => 'metric',
      'group' => t('AdWords calculated metrics'),
      'name' => t('RPC'),
      'description' => t('RPC or revenue-per-click is the average revenue (from ecommerce sales and/or goal value) you received for each click on one of your search ads.'),
      'calculation' => '(ga:transactionRevenue + ga:goalValueAll) / ga:adClicks',
      'datatype' => 'currency',
    ),
    'ROAS' => array(
      'type' => 'metric',
      'group' => t('AdWords calculated metrics'),
      'name' => t('ROAS'),
      'description' => t('Return On Ad Spend (ROAS) is the total transaction revenue and goal value divided by derived advertising cost.'),
      'calculation' => '(ga:transactionRevenue + ga:goalValueAll) / ga:adCost',
      'datatype' => 'percent',
    ),
    // Goal conversions dimensions.
    'goalCompletionLocation' => array(
      'type' => 'dimension',
      'group' => t('Goal conversions dimensions'),
      'name' => t('Goal Completion Location'),
      'description' => t('The page path or screen name that matched any destination type goal completion.'),
      'datatype' => 'string',
    ),
    'goalPreviousStep1' => array(
      'type' => 'dimension',
      'group' => t('Goal conversions dimensions'),
      'name' => t('Goal Previous Step - 1'),
      'description' => t('The page path or screen name that matched any destination type goal, one step prior to the goal completion location.'),
      'datatype' => 'string',
    ),
    'goalPreviousStep2' => array(
      'type' => 'dimension',
      'group' => t('Goal conversions dimensions'),
      'name' => t('Goal Previous Step - 2'),
      'description' => t('The page path or screen name that matched any destination type goal, one step prior to the goal completion location.'),
      'datatype' => 'string',
    ),
    'goalPreviousStep3' => array(
      'type' => 'dimension',
      'group' => t('Goal conversions dimensions'),
      'name' => t('Goal Previous Step - 3'),
      'description' => t('The page path or screen name that matched any destination type goal, one step prior to the goal completion location.'),
      'datatype' => 'string',
    ),
    // Goal conversions metrics.
    'goalXXStarts' => array(
      'type' => 'metric',
      'group' => t('Goal conversions metrics'),
      'name' => t('Goal XX Starts'),
      'description' => t('The total number of starts for the requested goal number.'),
      'datatype' => 'integer',
    ),
    'goalStartsAll' => array(
      'type' => 'metric',
      'group' => t('Goal conversions metrics'),
      'name' => t('Goal Starts'),
      'description' => t('The total number of starts for all goals defined for your profile.'),
      'datatype' => 'integer',
    ),
    'goalXXCompletions' => array(
      'type' => 'metric',
      'group' => t('Goal conversions metrics'),
      'name' => t('Goal XX Completions'),
      'description' => t('The total number of completions for the requested goal number.'),
      'datatype' => 'integer',
    ),
    'goalCompletionsAll' => array(
      'type' => 'metric',
      'group' => t('Goal conversions metrics'),
      'name' => t('Goal Completions'),
      'description' => t('The total number of completions for all goals defined for your profile.'),
      'datatype' => 'integer',
    ),
    'goalXXValue' => array(
      'type' => 'metric',
      'group' => t('Goal conversions metrics'),
      'name' => t('Goal XX Value'),
      'description' => t('The total numeric value for the requested goal number.'),
      'datatype' => 'currency',
    ),
    'goalValueAll' => array(
      'type' => 'metric',
      'group' => t('Goal conversions metrics'),
      'name' => t('Goal Value'),
      'description' => t('The total numeric value for all goals defined for your profile.'),
      'datatype' => 'currency',
    ),
    // Goal conversions calculated metrics.
    'goalValuePerSession' => array(
      'type' => 'metric',
      'group' => t('Goal conversions calculated metrics'),
      'name' => t('Per Session Goal Value'),
      'description' => t('The average goal value of a session on your property.'),
      'calculation' => 'ga:goalValueAll / ga:sessions',
      'datatype' => 'currency',
    ),
    'goalXXConversionRate' => array(
      'type' => 'metric',
      'group' => t('Goal conversions calculated metrics'),
      'name' => t('Goal XX Conversion Rate'),
      'description' => t('The percentage of sessions which resulted in a conversion to the requested goal number.'),
      'calculation' => 'ga:goalXXCompletions / ga:sessions',
      'datatype' => 'percent',
    ),
    'goalConversionRateAll' => array(
      'type' => 'metric',
      'group' => t('Goal conversions calculated metrics'),
      'name' => t('Goal Conversion Rate'),
      'description' => t('The percentage of sessions which resulted in a conversion to at least one of your goals.'),
      'calculation' => 'ga:goalCompletionsAll / ga:sessions',
      'datatype' => 'percent',
    ),
    'goalXXAbandons' => array(
      'type' => 'metric',
      'group' => t('Goal conversions calculated metrics'),
      'name' => t('Goal XX Abandoned Funnels'),
      'description' => t('The number of times users started conversion activity on the requested goal number without actually completing it.'),
      'calculation' => '(ga:goalXXStarts - ga:goalXXCompletions)',
      'datatype' => 'integer',
    ),
    'goalAbandonsAll' => array(
      'type' => 'metric',
      'group' => t('Goal conversions calculated metrics'),
      'name' => t('Abandoned Funnels'),
      'description' => t('The overall number of times users started goals without actually completing them.'),
      'calculation' => '(ga:goalStartsAll - ga:goalCompletionsAll)',
      'datatype' => 'integer',
    ),
    'goalXXAbandonRate' => array(
      'type' => 'metric',
      'group' => t('Goal conversions calculated metrics'),
      'name' => t('Goal XX Abandonment Rate'),
      'description' => t('The rate at which the requested goal number was abandoned.'),
      'calculation' => '((ga:goalXXStarts - ga:goalXXCompletions)) / (ga:goalXXStarts)',
      'datatype' => 'percent',
    ),
    'goalAbandonRateAll' => array(
      'type' => 'metric',
      'group' => t('Goal conversions calculated metrics'),
      'name' => t('Total Abandonment Rate'),
      'description' => t('The rate at which goals were abandoned.'),
      'calculation' => '((ga:goalStartsAll - ga:goalCompletionsAll)) / (ga:goalStartsAll)',
      'datatype' => 'percent',
    ),
    // Platform or device dimensions.
    'browser' => array(
      'type' => 'dimension',
      'group' => t('Platform or device dimensions'),
      'name' => t('Browser'),
      'description' => t('The names of browsers used by users to your website. For example, <code>Internet Explorer</code> or <code>Firefox</code>.'),
      'datatype' => 'string',
    ),
    'browserVersion' => array(
      'type' => 'dimension',
      'group' => t('Platform or device dimensions'),
      'name' => t('Browser Version'),
      'description' => t('The browser versions used by users to your website. For example, <code>2.0.0.14</code>.'),
      'datatype' => 'string',
    ),
    'operatingSystem' => array(
      'type' => 'dimension',
      'group' => t('Platform or device dimensions'),
      'name' => t('Operating System'),
      'description' => t('The operating system used by your users. For example, <code>Windows</code>, <code>Linux</code> , <code>Macintosh</code>, <code>iPhone</code>, <code>iPod</code>.'),
      'datatype' => 'string',
    ),
    'operatingSystemVersion' => array(
      'type' => 'dimension',
      'group' => t('Platform or device dimensions'),
      'name' => t('Operating System Version'),
      'description' => t('The version of the operating system used by your users, such as <code>XP</code> for Windows or <code>PPC</code> for Macintosh.'),
      'datatype' => 'string',
    ),
    'mobileDeviceBranding' => array(
      'type' => 'dimension',
      'group' => t('Platform or device dimensions'),
      'name' => t('Mobile Device Branding'),
      'description' => t('Mobile manufacturer or branded name.'),
      'datatype' => 'string',
    ),
    'mobileDeviceModel' => array(
      'type' => 'dimension',
      'group' => t('Platform or device dimensions'),
      'name' => t('Mobile Device Model'),
      'description' => t('Mobile device model.'),
      'datatype' => 'string',
    ),
    'mobileInputSelector' => array(
      'type' => 'dimension',
      'group' => t('Platform or device dimensions'),
      'name' => t('Mobile Input Selector'),
      'description' => t('Selector used on the mobile device (e.g.: <code>touchscreen</code>, <code>joystick</code>, <code>clickwheel</code>, <code>stylus</code>).'),
      'datatype' => 'string',
    ),
    'mobileDeviceInfo' => array(
      'type' => 'dimension',
      'group' => t('Platform or device dimensions'),
      'name' => t('Mobile Device Info'),
      'description' => t('The branding, model, and marketing name used to identify the mobile device.'),
      'datatype' => 'string',
    ),
    'mobileDeviceMarketingName' => array(
      'type' => 'dimension',
      'group' => t('Platform or device dimensions'),
      'name' => t('Mobile Device Marketing Name'),
      'description' => t('The marketing name used for the mobile device.'),
      'datatype' => 'string',
    ),
    'deviceCategory' => array(
      'type' => 'dimension',
      'group' => t('Platform or device dimensions'),
      'name' => t('Device Category'),
      'description' => t('The type of device: <code>desktop</code>, <code>tablet</code>, or <code>mobile</code>.'),
      'datatype' => 'string',
    ),
    // Geo network dimensions.
    'continent' => array(
      'type' => 'dimension',
      'group' => t('Geo network dimensions'),
      'name' => t('Continent'),
      'description' => t('The continents of property users, derived from IP addresses.'),
      'datatype' => 'string',
    ),
    'subContinent' => array(
      'type' => 'dimension',
      'group' => t('Geo network dimensions'),
      'name' => t('Sub Continent Region'),
      'description' => t('The sub-continent of users, derived from IP addresses. For example, <code>Polynesia</code> or <code>Northern Europe</code>.'),
      'datatype' => 'string',
    ),
    'country' => array(
      'type' => 'dimension',
      'group' => t('Geo network dimensions'),
      'name' => t('Country / Territory'),
      'description' => t('The country of users, derived from IP addresses.'),
      'datatype' => 'string',
    ),
    'region' => array(
      'type' => 'dimension',
      'group' => t('Geo network dimensions'),
      'name' => t('Region'),
      'description' => t('The region of users to your property, derived from IP addresses. In the U.S., a region is a state, such as <code>New York</code>.'),
      'datatype' => 'string',
    ),
    'metro' => array(
      'type' => 'dimension',
      'group' => t('Geo network dimensions'),
      'name' => t('Metro'),
      'description' => t('The Designated Market Area (DMA) from where traffic arrived on your property.'),
      'datatype' => 'string',
    ),
    'city' => array(
      'type' => 'dimension',
      'group' => t('Geo network dimensions'),
      'name' => t('City'),
      'description' => t('The cities of property users, derived from IP addresses.'),
      'datatype' => 'string',
    ),
    'latitude' => array(
      'type' => 'dimension',
      'group' => t('Geo network dimensions'),
      'name' => t('Latitude'),
      'description' => t("The approximate latitude of the user's city. Derived from IP address. Locations north of the equator are represented by positive values and locations south of the equator by negative values."),
      'datatype' => 'string',
    ),
    'longitude' => array(
      'type' => 'dimension',
      'group' => t('Geo network dimensions'),
      'name' => t('Longitude'),
      'description' => t("The approximate longitude of the user's city. Derived from IP address. Locations east of the meridian are represented by positive values and locations west of the meridian by negative values."),
      'datatype' => 'string',
    ),
    'networkDomain' => array(
      'type' => 'dimension',
      'group' => t('Geo network dimensions'),
      'name' => t('Network Domain'),
      'description' => t('The domain name of the ISPs used by users to your property. This is derived from the domain name registered to the IP address.'),
      'datatype' => 'string',
    ),
    'networkLocation' => array(
      'type' => 'dimension',
      'group' => t('Geo network dimensions'),
      'name' => t('Service Provider'),
      'description' => t('The name of service providers used to reach your property. For example, if most users to your website come via the major service providers for cable internet, you will see the names of those cable service providers in this element.'),
      'datatype' => 'string',
    ),
    // System dimensions.
    'flashVersion' => array(
      'type' => 'dimension',
      'group' => t('System dimensions'),
      'name' => t('Flash Version'),
      'description' => t("The versions of Flash supported by users' browsers, including minor versions."),
      'datatype' => 'string',
    ),
    'javaEnabled' => array(
      'type' => 'dimension',
      'group' => t('System dimensions'),
      'name' => t('Java Support'),
      'description' => t("Indicates Java support for user's browsers. The possible values are <code>Yes</code> or <code>No</code> where the first letter must be capitalized."),
      'datatype' => 'string',
    ),
    'language' => array(
      'type' => 'dimension',
      'group' => t('System dimensions'),
      'name' => t('Language'),
      'description' => t('The language provided by the HTTP Request for the browser. Values are given as an ISO-639 code (e.g. <code>en-gb</code> for British English).'),
      'datatype' => 'string',
    ),
    'screenColors' => array(
      'type' => 'dimension',
      'group' => t('System dimensions'),
      'name' => t('Screen Colors'),
      'description' => t("The color depth of users monitors, as retrieved from the DOM of the user\'s browser. For example <code>4-bit</code>, <code>8-bit</code>, <code>24-bit</code>, or <code>undefined-bit</code>."),
      'datatype' => 'string',
    ),
    'sourcePropertyDisplayName' => array(
      'type' => 'dimension',
      'group' => t('System dimensions'),
      'name' => t('Source Property Display Name'),
      'description' => t('Source property display name of roll-up properties. This is valid only for roll-up properties.'),
      'datatype' => 'string',
    ),
    'sourcePropertyTrackingId' => array(
      'type' => 'dimension',
      'group' => t('System dimensions'),
      'name' => t('Source Property Tracking ID'),
      'description' => t('Source property tracking ID of roll-up properties. This is valid only for roll-up properties.'),
      'datatype' => 'string',
    ),
    'screenResolution' => array(
      'type' => 'dimension',
      'group' => t('System dimensions'),
      'name' => t('Screen Resolution'),
      'description' => t("The screen resolution of user's screens. For example: <code>1024x738</code>."),
      'datatype' => 'string',
    ),
    // Social activities dimensions.
    'socialActivityEndorsingUrl' => array(
      'type' => 'dimension',
      'group' => t('Social activities dimensions'),
      'name' => t('Endorsing URL'),
      'description' => t('For a social data hub activity, this value represents the URL of the social activity (e.g. the Google+ post URL, the blog comment URL, etc.).'),
      'datatype' => 'string',
    ),
    'socialActivityDisplayName' => array(
      'type' => 'dimension',
      'group' => t('Social activities dimensions'),
      'name' => t('Display Name'),
      'description' => t('For a social data hub activity, this value represents the title of the social activity posted by the social network user.'),
      'datatype' => 'string',
    ),
    'socialActivityPost' => array(
      'type' => 'dimension',
      'group' => t('Social activities dimensions'),
      'name' => t('Social Activity Post'),
      'description' => t('For a social data hub activity, this value represents the content of the social activity posted by the social network user (e.g. The message content of a Google+ post).'),
      'datatype' => 'string',
    ),
    'socialActivityTimestamp' => array(
      'type' => 'dimension',
      'group' => t('Social activities dimensions'),
      'name' => t('Social Activity Timestamp'),
      'description' => t('For a social data hub activity, this value represents when the social activity occurred on the social network.'),
      'datatype' => 'string',
    ),
    'socialActivityUserHandle' => array(
      'type' => 'dimension',
      'group' => t('Social activities dimensions'),
      'name' => t('Social Activity Timestamp'),
      'description' => t('For a social data hub activity, this value represents when the social activity occurred on the social network.'),
      'datatype' => 'string',
    ),
    'socialActivityUserPhotoUrl' => array(
      'type' => 'dimension',
      'group' => t('Social activities dimensions'),
      'name' => t('User Photo URL'),
      'description' => t("For a social data hub activity, this value represents the URL of the photo associated with the user's social network profile."),
      'datatype' => 'string',
    ),
    'socialActivityUserProfileUrl' => array(
      'type' => 'dimension',
      'group' => t('Social activities dimensions'),
      'name' => t('User Profile URL'),
      'description' => t("For a social data hub activity, this value represents the URL of the associated user's social network profile."),
      'datatype' => 'string',
    ),
    'socialActivityContentUrl' => array(
      'type' => 'dimension',
      'group' => t('Social activities dimensions'),
      'name' => t('Shared URL'),
      'description' => t('For a social data hub activity, this value represents the URL shared by the associated social network user.'),
      'datatype' => 'string',
    ),
    'socialActivityTagsSummary' => array(
      'type' => 'dimension',
      'group' => t('Social activities dimensions'),
      'name' => t('Social Tags Summary'),
      'description' => t('For a social data hub activity, this is a comma-separated set of tags associated with the social activity.'),
      'datatype' => 'string',
    ),
    'socialActivityAction' => array(
      'type' => 'dimension',
      'group' => t('Social activities dimensions'),
      'name' => t('Originating Social Action'),
      'description' => t('For a social data hub activity, this value represents the type of social action associated with the activity (e.g. vote, comment, +1, etc.).'),
      'datatype' => 'string',
    ),
    'socialActivityNetworkAction' => array(
      'type' => 'dimension',
      'group' => t('Social activities dimensions'),
      'name' => t('Social Network and Action'),
      'description' => t('For a social data hub activity, this value represents the type of social action and the social network where the activity originated.'),
      'datatype' => 'string',
    ),
    // Social activities metrics.
    'socialActivities' => array(
      'type' => 'metric',
      'group' => t('Social activitie'),
      'name' => t('Data Hub Activities'),
      'description' => t('The count of activities where a content URL was shared / mentioned on a social data hub partner network.'),
      'datatype' => 'integer',
    ),
    // Page tracking dimensions.
    'hostname' => array(
      'type' => 'dimension',
      'group' => t('Page tracking dimensions'),
      'name' => t('Hostname'),
      'description' => t('The hostname from which the tracking request was made.'),
      'datatype' => 'string',
    ),
    'pagePath' => array(
      'type' => 'dimension',
      'group' => t('Page tracking dimensions'),
      'name' => t('Page'),
      'description' => t('A page on your website specified by path and/or query parameters. Use in conjunction with hostname to get the full URL of the page.'),
      'datatype' => 'string',
    ),
    'pagePathLevel1' => array(
      'type' => 'dimension',
      'group' => t('Page tracking dimensions'),
      'name' => t('Page path level 1'),
      'description' => t('This dimension rolls up all the page paths in the first hierarchical level in pagePath.'),
      'datatype' => 'string',
    ),
    'pagePathLevel2' => array(
      'type' => 'dimension',
      'group' => t('Page tracking dimensions'),
      'name' => t('Page path level 2'),
      'description' => t('This dimension rolls up all the page paths in the first hierarchical level in pagePath.'),
      'datatype' => 'string',
    ),
    'pagePathLevel3' => array(
      'type' => 'dimension',
      'group' => t('Page tracking dimensions'),
      'name' => t('Page path level 3'),
      'description' => t('This dimension rolls up all the page paths in the first hierarchical level in pagePath.'),
      'datatype' => 'string',
    ),
    'pagePathLevel4' => array(
      'type' => 'dimension',
      'group' => t('Page tracking dimensions'),
      'name' => t('Page path level 4'),
      'description' => t('This dimension rolls up all the page paths in the first hierarchical level in pagePath.'),
      'datatype' => 'string',
    ),
    'pageTitle' => array(
      'type' => 'dimension',
      'group' => t('Page tracking dimensions'),
      'name' => t('Page Title'),
      'description' => t('The title of a page. Keep in mind that multiple pages might have the same page title.'),
      'datatype' => 'string',
    ),
    'landingPagePath' => array(
      'type' => 'dimension',
      'group' => t('Page tracking dimensions'),
      'name' => t('Landing Page'),
      'description' => t("The first page in a user's session, or landing pag"),
      'datatype' => 'string',
    ),
    'secondPagePath' => array(
      'type' => 'dimension',
      'group' => t('Page tracking dimensions'),
      'name' => t('Second Page'),
      'description' => t("The second page in a user's session."),
      'datatype' => 'string',
    ),
    'exitPagePath' => array(
      'type' => 'dimension',
      'group' => t('Page tracking dimensions'),
      'name' => t('Exit Page'),
      'description' => t("The last page in a user's session, or exit page."),
      'datatype' => 'string',
    ),
    'previousPagePath' => array(
      'type' => 'dimension',
      'group' => t('Page tracking dimensions'),
      'name' => t('Previous Page Path'),
      'description' => t('A page on your property that was visited before another page on the same property. Typically used with the pagePath dimension.'),
      'datatype' => 'string',
    ),
    'nextPagePath' => array(
      'type' => 'dimension',
      'group' => t('Page tracking dimensions'),
      'name' => t('Next Page Path'),
      'description' => t('A page on your website that was visited after another page on your website. Typically used with the previousPagePath dimension.'),
      'datatype' => 'string',
    ),
    'pageDepth' => array(
      'type' => 'dimension',
      'group' => t('Page tracking dimensions'),
      'name' => t('Page Depth'),
      'description' => t('The number of pages visited by users during a session. The value is a histogram that counts pageviews across a range of possible values. In this calculation, all sessions will have at least one pageview, and some percentage of sessions will have more.'),
      'datatype' => 'string',
    ),
    // Page tracking metrics.
    'pageValue' => array(
      'type' => 'metric',
      'group' => t('Page tracking metrics'),
      'name' => t('Page Value'),
      'description' => t('The average value of this page or set of pages. Page Value is <code>(ga:transactionRevenue + ga:goalValueAll) / ga:uniquePageviews</code> (for the page or set of pages).'),
      'datatype' => 'currency',
    ),
    'entrances' => array(
      'type' => 'metric',
      'group' => t('Page tracking metrics'),
      'name' => t('Entrances'),
      'description' => t('The number of entrances to your property measured as the first pageview in a session. Typically used with <code>landingPagePath</code>.'),
      'datatype' => 'integer',
    ),
    'pageviews' => array(
      'type' => 'metric',
      'group' => t('Page tracking metrics'),
      'name' => t('Pageviews'),
      'description' => t('The total number of pageviews for your property.'),
      'datatype' => 'integer',
    ),
    'uniquePageviews' => array(
      'type' => 'metric',
      'group' => t('Page tracking metrics'),
      'name' => t('Unique Pageviews'),
      'description' => t('The number of different (unique) pages within a session. This takes into account both the pagePath and pageTitle to determine uniqueness.'),
      'datatype' => 'integer',
    ),
    'timeOnPage' => array(
      'type' => 'metric',
      'group' => t('Page tracking metrics'),
      'name' => t('Time on Page'),
      'description' => t('How long a user spent on a particular page in seconds. Calculated by subtracting the initial view time for a particular page from the initial view time for a subsequent page. Thus, this metric does not apply to exit pages for your property.'),
      'datatype' => 'time',
    ),
    'exits' => array(
      'type' => 'metric',
      'group' => t('Page tracking metrics'),
      'name' => t('Exits'),
      'description' => t('The number of exits from your property.'),
      'datatype' => 'integer',
    ),
    // Page tracking calculated metrics.
    'entranceRate' => array(
      'type' => 'metric',
      'group' => t('Page tracking calculated metrics'),
      'name' => t('Entrances / Pageviews'),
      'description' => t('The percentage of pageviews in which this page was the entrance.'),
      'calculation' => 'ga:entrances / ga:pageviews',
      'datatype' => 'percent',
    ),
    'pageviewsPerSession' => array(
      'type' => 'metric',
      'group' => t('Page tracking calculated metrics'),
      'name' => t('Pages / Session'),
      'description' => t('The average number of pages viewed during a session on your property. Repeated views of a single page are counted.'),
      'calculation' => 'ga:pageviews / ga:sessions',
      'datatype' => 'float',
    ),
    'avgTimeOnPage' => array(
      'type' => 'metric',
      'group' => t('Page tracking calculated metrics'),
      'name' => t('Avg. Time on Page'),
      'description' => t('The average amount of time users spent viewing this page or a set of pages.'),
      'calculation' => 'ga:timeOnPage / (ga:pageviews - ga:exits)',
      'datatype' => 'time',
    ),
    'exitRate' => array(
      'type' => 'metric',
      'group' => t('Page tracking calculated metrics'),
      'name' => t('% Exit'),
      'description' => t('The percentage of exits from your property that occurred out of the total page views.'),
      'calculation' => 'ga:exits / (ga:pageviews + ga:screenviews)',
      'datatype' => 'percent',
    ),
    // Content grouping dimensions.
    'landingContentGroupXX' => array(
      'type' => 'dimension',
      'group' => t('Content grouping dimensions'),
      'name' => t('Landing Page Group XX'),
      'description' => t("The first matching content group in a user's session."),
      'datatype' => 'string',
    ),
    'previousContentGroupXX' => array(
      'type' => 'dimension',
      'group' => t('Content grouping dimensions'),
      'name' => t('Previous Page Group XX'),
      'description' => t('Refers to content group that was visited before another content group.'),
      'datatype' => 'string',
    ),
    'contentGroupXX' => array(
      'type' => 'dimension',
      'group' => t('Content grouping dimensions'),
      'name' => t('Page Group XX'),
      'description' => t('Content group on a property. A content group is a collection of content providing a logical structure that can be determined by tracking code or page title/url regex match, or predefined rules.'),
      'datatype' => 'string',
    ),
    'nextContentGroupXX' => array(
      'type' => 'dimension',
      'group' => t('Content grouping dimensions'),
      'name' => t('Next Page Group XX'),
      'description' => t('Refers to content group that was visited after another content group.'),
      'datatype' => 'string',
    ),
    // Content grouping metrics.
    'contentGroupUniqueViewsXX' => array(
      'type' => 'metric',
      'group' => t('Content grouping metrics'),
      'name' => t('Unique Views'),
      'description' => t('The number of different (unique) pages within a session for the specified content group. This takes into account both the pagePath and pageTitle to determine uniqueness.'),
      'datatype' => 'integer',
    ),
    // Internal search dimensions.
    'searchUsed' => array(
      'type' => 'dimension',
      'group' => t('Internal search dimensions'),
      'name' => t('Site Search Status'),
      'description' => t('A boolean to distinguish whether internal search was used in a session. Values are <code>Visits With Site Search</code> and <code>Visits Without Site Search</code>.'),
      'datatype' => 'string',
    ),
    'searchKeyword' => array(
      'type' => 'dimension',
      'group' => t('Internal search dimensions'),
      'name' => t('Search Term'),
      'description' => t('Search terms used by users within your property.'),
      'datatype' => 'string',
    ),
    'searchKeywordRefinement' => array(
      'type' => 'dimension',
      'group' => t('Internal search dimensions'),
      'name' => t('Refined Keyword'),
      'description' => t('Subsequent keyword search terms or strings entered by users after a given initial string search.'),
      'datatype' => 'string',
    ),
    'searchCategory' => array(
      'type' => 'dimension',
      'group' => t('Internal search dimensions'),
      'name' => t('Site Search Category'),
      'description' => t('The categories used for the internal search if you have this enabled for your profile. For example, you might have product categories such as <code>electronics</code>, <code>furniture</code>, or <code>clothing</code>.'),
      'datatype' => 'string',
    ),
    'searchStartPage' => array(
      'type' => 'dimension',
      'group' => t('Internal search dimensions'),
      'name' => t('Start Page'),
      'description' => t('A page where the user initiated an internal search on your property.'),
      'datatype' => 'string',
    ),
    'searchDestinationPage' => array(
      'type' => 'dimension',
      'group' => t('Internal search dimensions'),
      'name' => t('Destination Page'),
      'description' => t('A page that the user visited after performing an internal search on your property.'),
      'datatype' => 'string',
    ),
    // Internal search metrics.
    'searchResultViews' => array(
      'type' => 'metric',
      'group' => t('Internal search metrics'),
      'name' => t('Results Pageviews'),
      'description' => t('The number of times a search result page was viewed after performing a search.'),
      'datatype' => 'integer',
    ),
    'searchUniques' => array(
      'type' => 'metric',
      'group' => t('Internal search metrics'),
      'name' => t('Total Unique Searches'),
      'description' => t('The total number of unique keywords from internal searches within a session. For example if "shoes" was searched for 3 times in a session, it will be only counted once.'),
      'datatype' => 'integer',
    ),
    'searchSessions' => array(
      'type' => 'metric',
      'group' => t('Internal search metrics'),
      'name' => t('Sessions with Search'),
      'description' => t('The total number of sessions that included an internal search'),
      'datatype' => 'integer',
    ),
    'searchDepth' => array(
      'type' => 'metric',
      'group' => t('Internal search metrics'),
      'name' => t('Search Depth'),
      'description' => t('The average number of subsequent page views made on your property after a use of your internal search feature.'),
      'datatype' => 'integer',
    ),
    'searchRefinements' => array(
      'type' => 'metric',
      'group' => t('Internal search metrics'),
      'name' => t('Search Refinements'),
      'description' => t('The total number of times a refinement (transition) occurs between internal search keywords within a session. For example if the sequence of keywords is: <code>shoes</code>, <code>shoes</code>, <code>pants</code>, <code>pants</code>, this metric will be one because the transition between <code>shoes</code> and <code>pants</code> is different.'),
      'datatype' => 'integer',
    ),
    'searchDuration' => array(
      'type' => 'metric',
      'group' => t('Internal search metrics'),
      'name' => t('Time after Search'),
      'description' => t('The session duration on your property where a use of your internal search feature occurred.'),
      'datatype' => 'time',
    ),
    'searchExits' => array(
      'type' => 'metric',
      'group' => t('Internal search metrics'),
      'name' => t('Search Exits'),
      'description' => t('The number of exits on your site that occurred following a search result from your internal search feature.'),
      'datatype' => 'integer',
    ),
    // Internal search calculated metrics.
    'avgSearchResultViews' => array(
      'type' => 'metric',
      'group' => t('Internal search calculated metrics'),
      'name' => t('Results Pageviews / Search'),
      'description' => t('The average number of times people viewed a search results page after performing a search.'),
      'calculation' => 'ga:searchResultViews / ga:searchUniques',
      'datatype' => 'float',
    ),
    'percentSessionsWithSearch' => array(
      'type' => 'metric',
      'group' => t('Internal search calculated metrics'),
      'name' => t('% Sessions with Search'),
      'description' => t('The percentage of sessions with search.'),
      'calculation' => 'ga:searchSessions / ga:sessions',
      'datatype' => 'percent',
    ),
    'avgSearchDepth' => array(
      'type' => 'metric',
      'group' => t('Internal search calculated metrics'),
      'name' => t('Average Search Depth'),
      'description' => t('The average number of pages people viewed after performing a search on your property.'),
      'calculation' => 'ga:searchDepth / ga:searchUniques',
      'datatype' => 'float',
    ),
    'percentSearchRefinements' => array(
      'type' => 'metric',
      'group' => t('Internal search calculated metrics'),
      'name' => t('% Search Refinements'),
      'description' => t('The percentage of number of times a refinement (i.e., transition) occurs between internal search keywords within a session.'),
      'calculation' => 'ga:searchRefinements / ga:searchResultViews',
      'datatype' => 'percent',
    ),
    'avgSearchDuration' => array(
      'type' => 'metric',
      'group' => t('Internal search calculated metrics'),
      'name' => t('Time after Search'),
      'description' => t('The average amount of time people spent on your property after searching.'),
      'calculation' => 'ga:searchDuration / ga:searchUniques',
      'datatype' => 'time',
    ),
    'searchExitRate' => array(
      'type' => 'metric',
      'group' => t('Internal search calculated metrics'),
      'name' => t('% Search Exits'),
      'description' => t('The percentage of searches that resulted in an immediate exit from your property.'),
      'calculation' => 'ga:searchExits / ga:searchUniques',
      'datatype' => 'percent',
    ),
    'searchGoalXXConversionRate' => array(
      'type' => 'metric',
      'group' => t('Internal search calculated metrics'),
      'name' => t('Site Search Goal XX Conversion Rate'),
      'description' => t('The percentage of search sessions (i.e., sessions that included at least one search) which resulted in a conversion to the requested goal number.'),
      'calculation' => 'ga:goalXXCompletions / ga:searchUniques',
      'datatype' => 'percent',
    ),
    'searchGoalConversionRateAll' => array(
      'type' => 'metric',
      'group' => t('Internal search calculated metrics'),
      'name' => t('Site Search Goal Conversion Rate'),
      'description' => t('The percentage of search sessions (i.e., sessions that included at least one search) which resulted in a conversion to at least one of your goals.'),
      'calculation' => 'ga:goalCompletionsAll / ga:searchUniques',
      'datatype' => 'percent',
    ),
    'goalValueAllPerSearch' => array(
      'type' => 'metric',
      'group' => t('Internal search calculated metrics'),
      'name' => t('Per Search Goal Value'),
      'description' => t('The average goal value of a search on your property.'),
      'calculation' => 'ga:goalValueAll / ga:searchUniques',
      'datatype' => 'currency',
    ),
    // Site speed metrics.
    'pageLoadTime' => array(
      'type' => 'metric',
      'group' => t('Site speed metrics'),
      'name' => t('Page Load Time (ms)'),
      'description' => t('Total Page Load Time is the amount of time (in milliseconds) it takes for pages from the sample set to load, from initiation of the pageview (e.g. click on a page link) to load completion in the browser.'),
      'datatype' => 'integer',
    ),
    'pageLoadSample' => array(
      'type' => 'metric',
      'group' => t('Site speed metrics'),
      'name' => t('Page Load Sample'),
      'description' => t('The sample set (or count) of pageviews used to calculate the average page load time.'),
      'datatype' => 'integer',
    ),
    'domainLookupTime' => array(
      'type' => 'metric',
      'group' => t('Site speed metrics'),
      'name' => t('Domain Lookup Time (ms)'),
      'description' => t('The total amount of time (in milliseconds) spent in DNS lookup for this page among all samples.'),
      'datatype' => 'integer',
    ),
    'pageDownloadTime' => array(
      'type' => 'metric',
      'group' => t('Site speed metrics'),
      'name' => t('Page Download Time (ms)'),
      'description' => t('The total amount of time (in milliseconds) to download this page among all samples.'),
      'datatype' => 'integer',
    ),
    'redirectionTime' => array(
      'type' => 'metric',
      'group' => t('Site speed metrics'),
      'name' => t('Redirection Time (ms)'),
      'description' => t('The total amount of time (in milliseconds) spent in redirects before fetching this page among all samples. If there are no redirects, the value for this metric is expected to be 0.'),
      'datatype' => 'integer',
    ),
    'serverConnectionTime' => array(
      'type' => 'metric',
      'group' => t('Site speed metrics'),
      'name' => t('Server Connection Time (ms)'),
      'description' => t('The total amount of time (in milliseconds) spent in establishing TCP connection for this page among all samples.'),
      'datatype' => 'integer',
    ),
    'serverResponseTime' => array(
      'type' => 'metric',
      'group' => t('Site speed metrics'),
      'name' => t('Server Response Time (ms)'),
      'description' => t("The total amount of time (in milliseconds) your server takes to respond to a user request among all samples, including the network time from user's location to your server."),
      'datatype' => 'integer',
    ),
    'speedMetricsSample' => array(
      'type' => 'metric',
      'group' => t('Site speed metrics'),
      'name' => t('Speed Metrics Sample'),
      'description' => t('The sample set (or count) of pageviews used to calculate the averages for site speed metrics. This metric is used in all site speed average calculations including <code>avgDomainLookupTime</code>, <code>avgPageDownloadTime</code>, <code>avgRedirectionTime</code>, <code>avgServerConnectionTime</code>, and <code>avgServerResponseTime</code>.'),
      'datatype' => 'integer',
    ),
    'domInteractiveTime' => array(
      'type' => 'metric',
      'group' => t('Site speed metrics'),
      'name' => t('Document Interactive Time (ms)'),
      'description' => t("The time the browser takes (in milliseconds) to parse the document (DOMInteractive), including the network time from the user's location to your server. At this time, the user can interact with the Document Object Model even though it is not fully loaded."),
      'datatype' => 'integer',
    ),
    'domContentLoadedTime' => array(
      'type' => 'metric',
      'group' => t('Site speed metrics'),
      'name' => t('Document Content Loaded Time (ms)'),
      'description' => t("The time the browser takes (in milliseconds) to parse the document and execute deferred and parser-inserted scripts (DOMContentLoaded), including the network time from the user's location to your server. Parsing of the document is finished, the Document Object Model is ready, but referenced style sheets, images, and subframes may not be finished loading. This event is often the starting point for javascript framework execution, e.g., jQuery's <code>onready()</code> callback, etc."),
      'datatype' => 'integer',
    ),
    'domLatencyMetricsSample' => array(
      'type' => 'metric',
      'group' => t('Site speed metrics'),
      'name' => t('DOM Latency Metrics Sample'),
      'description' => t('The sample set (or count) of pageviews used to calculate the averages for site speed DOM metrics. This metric is used in the <code>avgDomContentLoadedTime</code> and <code>avgDomInteractiveTime</code> calculations.'),
      'datatype' => 'integer',
    ),
    // Site speed calculated metrics.
    'avgPageLoadTime' => array(
      'type' => 'metric',
      'group' => t('Site speed calculated metrics'),
      'name' => t('Avg. Page Load Time (sec)'),
      'description' => t('The average amount of time (in seconds) it takes for pages from the sample set to load, from initiation of the pageview (e.g. click on a page link) to load completion in the browser.'),
      'calculation' => '(ga:pageLoadTime / ga:pageLoadSample / 1000)',
      'datatype' => 'float',
    ),
    'avgDomainLookupTime' => array(
      'type' => 'metric',
      'group' => t('Site speed calculated metrics'),
      'name' => t('Avg. Domain Lookup Time (sec)'),
      'description' => t('The average amount of time (in seconds) spent in DNS lookup for this page.'),
      'calculation' => '(ga:domainLookupTime / ga:speedMetricsSample / 1000)',
      'datatype' => 'float',
    ),
    'avgPageDownloadTime' => array(
      'type' => 'metric',
      'group' => t('Site speed calculated metrics'),
      'name' => t('Avg. Page Download Time (sec)'),
      'description' => t('The average amount of time (in seconds) to download this page.'),
      'calculation' => '(ga:pageDownloadTime / ga:speedMetricsSample / 1000)',
      'datatype' => 'float',
    ),
    'avgRedirectionTime' => array(
      'type' => 'metric',
      'group' => t('Site speed calculated metrics'),
      'name' => t('Avg. Redirection Time (sec)'),
      'description' => t('The average amount of time (in seconds) spent in redirects before fetching this page. If there are no redirects, the value for this metric is expected to be 0.'),
      'calculation' => '(ga:redirectionTime / ga:speedMetricsSample / 1000)',
      'datatype' => 'float',
    ),
    'avgServerConnectionTime' => array(
      'type' => 'metric',
      'group' => t('Site speed calculated metrics'),
      'name' => t('Avg. Server Connection Time (sec)'),
      'description' => t('The average amount of time (in seconds) spent in establishing TCP connection for this page.'),
      'calculation' => '(ga:serverConnectionTime / ga:speedMetricsSample / 1000)',
      'datatype' => 'float',
    ),
    'avgServerResponseTime' => array(
      'type' => 'metric',
      'group' => t('Site speed calculated metrics'),
      'name' => t('Avg. Server Response Time (sec)'),
      'description' => t("The average amount of time (in seconds) your server takes to respond to a user request, including the network time from user's location to your server."),
      'calculation' => '(ga:serverResponseTime / ga:speedMetricsSample / 1000)',
      'datatype' => 'float',
    ),
    'avgDomInteractiveTime' => array(
      'type' => 'metric',
      'group' => t('Site speed calculated metrics'),
      'name' => t('Avg. Document Interactive Time (sec)'),
      'description' => t("The average time (in seconds) it takes the browser to parse the document and execute deferred and parser-inserted scripts including the network time from the user's location to your server."),
      'calculation' => '(ga:domInteractiveTime / ga:domLatencyMetricsSample / 1000)',
      'datatype' => 'float',
    ),
    'avgDomContentLoadedTime' => array(
      'type' => 'metric',
      'group' => t('Site speed calculated metrics'),
      'name' => t('Avg. Document Content Loaded Time (sec)'),
      'description' => t('The average time (in seconds) it takes the browser to parse the document.'),
      'calculation' => '(ga:domContentLoadedTime / ga:domLatencyMetricsSample / 1000)',
      'datatype' => 'float',
    ),
    // Event tracking dimensions.
    'eventCategory' => array(
      'type' => 'dimension',
      'group' => t('Event tracking dimensions'),
      'name' => t('Event Category'),
      'description' => t('The category of the event.'),
      'datatype' => 'string',
    ),
    'eventAction' => array(
      'type' => 'dimension',
      'group' => t('Event tracking dimensions'),
      'name' => t('Event Action'),
      'description' => t('The action of the event.'),
      'datatype' => 'string',
    ),
    'eventLabel' => array(
      'type' => 'dimension',
      'group' => t('Event tracking dimensions'),
      'name' => t('Event Label'),
      'description' => t('The label of the event.'),
      'datatype' => 'string',
    ),
    // Event tracking metrics.
    'totalEvents' => array(
      'type' => 'metric',
      'group' => t('Event tracking metrics'),
      'name' => t('Total Events'),
      'description' => t('The total number of events for the profile, across all categories.'),
      'datatype' => 'integer',
    ),
    'uniqueEvents' => array(
      'type' => 'metric',
      'group' => t('Event tracking metrics'),
      'name' => t('Unique Events'),
      'description' => t('The total number of unique events for the profile, across all categories.'),
      'datatype' => 'integer',
    ),
    'eventValue' => array(
      'type' => 'metric',
      'group' => t('Event tracking metrics'),
      'name' => t('Event Value'),
      'description' => t('The total value of events for the profile.'),
      'datatype' => 'integer',
    ),
    'sessionsWithEvent' => array(
      'type' => 'metric',
      'group' => t('Event tracking metrics'),
      'name' => t('Sessions with Event'),
      'description' => t('The total number of sessions with events.'),
      'datatype' => 'integer',
    ),
    // Event tracking calculated metrics.
    'avgEventValue' => array(
      'type' => 'metric',
      'group' => t('Event tracking calculated metrics'),
      'name' => t('Avg. Value'),
      'description' => t('The average value of an event.'),
      'calculation' => 'ga:eventValue / ga:totalEvents',
      'datatype' => 'float',
    ),
    'eventsPerSessionWithEvent' => array(
      'type' => 'metric',
      'group' => t('Event tracking calculated metrics'),
      'name' => t('Events / Session with Event'),
      'description' => t('The average number of events per session with event.'),
      'calculation' => 'ga:totalEvents / ga:sessionsWithEvent',
      'datatype' => 'float',
    ),
    // Ecommerce dimensions.
    'transactionId' => array(
      'type' => 'dimension',
      'group' => t('Ecommerce dimensions'),
      'name' => t('Transaction ID'),
      'description' => t('The transaction ID for the shopping cart purchase as supplied by your ecommerce tracking method.'),
      'datatype' => 'string',
    ),
    'affiliation' => array(
      'type' => 'dimension',
      'group' => t('Ecommerce dimensions'),
      'name' => t('Affiliation'),
      'description' => t('Typically used to designate a supplying company or brick and mortar location; product affiliation.'),
      'datatype' => 'string',
    ),
    'sessionsToTransaction' => array(
      'type' => 'dimension',
      'group' => t('Ecommerce dimensions'),
      'name' => t('Sessions to Transaction'),
      'description' => t("The number of sessions between users' purchases and the related campaigns that lead to the purchases."),
      'datatype' => 'string',
    ),
    'daysToTransaction' => array(
      'type' => 'dimension',
      'group' => t('Ecommerce dimensions'),
      'name' => t('Days to Transaction'),
      'description' => t("The number of days between users' purchases and the related campaigns that lead to the purchases."),
      'datatype' => 'string',
    ),
    'productSku' => array(
      'type' => 'dimension',
      'group' => t('Ecommerce dimensions'),
      'name' => t('Product SKU'),
      'description' => t('The product sku for purchased items as you have defined them in your ecommerce tracking application.'),
      'datatype' => 'string',
    ),
    'productName' => array(
      'type' => 'dimension',
      'group' => t('Ecommerce dimensions'),
      'name' => t('Product'),
      'description' => t('The product name for purchased items as supplied by your ecommerce tracking application.'),
      'datatype' => 'string',
    ),
    'productCategory' => array(
      'type' => 'dimension',
      'group' => t('Ecommerce dimensions'),
      'name' => t('Product Category'),
      'description' => t('Any product variations (size, color) for purchased items as supplied by your ecommerce application. Not compatible with Enhanced Ecommerce.'),
      'datatype' => 'string',
    ),
    'currencyCode' => array(
      'type' => 'dimension',
      'group' => t('Ecommerce dimensions'),
      'name' => t('Currency Code'),
      'description' => t('The local currency code of the transaction based on ISO 4217 standard.'),
      'datatype' => 'string',
    ),
    'checkoutOptions' => array(
      'type' => 'dimension',
      'group' => t('Ecommerce dimensions'),
      'name' => t('Checkout Options'),
      'description' => t('User options specified during the checkout process, e.g., FedEx, DHL, UPS for delivery options or Visa, MasterCard, AmEx for payment options. This dimension should be used along with <code>ga:shoppingStage</code> (Enhanced Ecommerce).'),
      'datatype' => 'string',
    ),
    'internalPromotionCreative' => array(
      'type' => 'dimension',
      'group' => t('Ecommerce dimensions'),
      'name' => t('Internal Promotion Creative'),
      'description' => t('The creative content designed for a promotion (Enhanced Ecommerce).'),
      'datatype' => 'string',
    ),
    'internalPromotionId' => array(
      'type' => 'dimension',
      'group' => t('Ecommerce dimensions'),
      'name' => t('Internal Promotion ID'),
      'description' => t('The ID of the promotion (Enhanced Ecommerce).'),
      'datatype' => 'string',
    ),
    'internalPromotionName' => array(
      'type' => 'dimension',
      'group' => t('Ecommerce dimensions'),
      'name' => t('Internal Promotion Name'),
      'description' => t('The name of the promotion (Enhanced Ecommerce).'),
      'datatype' => 'string',
    ),
    'internalPromotionPosition' => array(
      'type' => 'dimension',
      'group' => t('Ecommerce dimensions'),
      'name' => t('Internal Promotion Position'),
      'description' => t('The position of the promotion on the web page or application screen (Enhanced Ecommerce).'),
      'datatype' => 'string',
    ),
    'orderCouponCode' => array(
      'type' => 'dimension',
      'group' => t('Ecommerce dimensions'),
      'name' => t('Order Coupon Code'),
      'description' => t('Code for the order-level coupon (Enhanced Ecommerce).'),
      'datatype' => 'string',
    ),
    'productBrand' => array(
      'type' => 'dimension',
      'group' => t('Ecommerce dimensions'),
      'name' => t('Product Brand'),
      'description' => t('The brand name under which the product is sold (Enhanced Ecommerce).'),
      'datatype' => 'string',
    ),
    'productCategoryHierarchy' => array(
      'type' => 'dimension',
      'group' => t('Ecommerce dimensions'),
      'name' => t('Product Category (Enhanced Ecommerce)'),
      'description' => t('The hierarchical category in which the product is classified (Enhanced Ecommerce).'),
      'datatype' => 'string',
    ),
    'productCategoryLevelXX' => array(
      'type' => 'dimension',
      'group' => t('Ecommerce dimensions'),
      'name' => t('Product Category Level XX'),
      'description' => t('Level (1-5) in the product category hierarchy, starting from the top (Enhanced Ecommerce).'),
      'datatype' => 'string',
    ),
    'productCouponCode' => array(
      'type' => 'dimension',
      'group' => t('Ecommerce dimensions'),
      'name' => t('Product Coupon Code'),
      'description' => t('Code for the product-level coupon (Enhanced Ecommerce).'),
      'datatype' => 'string',
    ),
    'productListName' => array(
      'type' => 'dimension',
      'group' => t('Ecommerce dimensions'),
      'name' => t('Product List Name'),
      'description' => t('The name of the product list in which the product appears (Enhanced Ecommerce).'),
      'datatype' => 'string',
    ),
    'productListPosition' => array(
      'type' => 'dimension',
      'group' => t('Ecommerce dimensions'),
      'name' => t('Product List Position'),
      'description' => t('The position of the product in the product list (Enhanced Ecommerce).'),
      'datatype' => 'string',
    ),
    'productVariant' => array(
      'type' => 'dimension',
      'group' => t('Ecommerce dimensions'),
      'name' => t('Product Variant'),
      'description' => t('The specific variation of a product, e.g., <code>XS</code>, <code>S</code>, <code>M</code>, <code>L</code> for size or <code>Red</code>, <code>Blue</code>, <code>Green</code>, <code>Black</code> for color (Enhanced Ecommerce).'),
      'datatype' => 'string',
    ),
    'shoppingStage' => array(
      'type' => 'dimension',
      'group' => t('Ecommerce dimensions'),
      'name' => t('Shopping Stage'),
      'description' => t('Various stages of the shopping experience that users completed in a session, e.g., <code>PRODUCT_VIEW</code>, <code>ADD_TO_CART</code>, <code>CHECKOUT</code>, etc. (Enhanced Ecommerce).'),
      'datatype' => 'string',
    ),
    // Ecommerce metrics.
    'transactions' => array(
      'type' => 'metric',
      'group' => t('Ecommerce metrics'),
      'name' => t('Transactions'),
      'description' => t('The total number of transactions.'),
      'datatype' => 'integer',
    ),
    'transactionRevenue' => array(
      'type' => 'metric',
      'group' => t('Ecommerce metrics'),
      'name' => t('Revenue'),
      'description' => t('The total sale revenue provided in the transaction excluding shipping and tax.'),
      'datatype' => 'currency',
    ),
    'transactionShipping' => array(
      'type' => 'metric',
      'group' => t('Ecommerce metrics'),
      'name' => t('Shipping'),
      'description' => t('The total cost of shipping.'),
      'datatype' => 'currency',
    ),
    'transactionTax' => array(
      'type' => 'metric',
      'group' => t('Ecommerce metrics'),
      'name' => t('Tax'),
      'description' => t('The total amount of tax.'),
      'datatype' => 'currency',
    ),
    'itemQuantity' => array(
      'type' => 'metric',
      'group' => t('Ecommerce metrics'),
      'name' => t('Quantity'),
      'description' => t('The total number of items purchased. For example, if users purchase 2 frisbees and 5 tennis balls, 7 items have been purchased.'),
      'datatype' => 'integer',
    ),
    'uniquePurchases' => array(
      'type' => 'metric',
      'group' => t('Ecommerce metrics'),
      'name' => t('Unique Purchases'),
      'description' => t('The number of product sets purchased. For example, if users purchase 2 frisbees and 5 tennis balls from your site, 2 unique products have been purchased.'),
      'datatype' => 'integer',
    ),
    'itemRevenue' => array(
      'type' => 'metric',
      'group' => t('Ecommerce metrics'),
      'name' => t('Product Revenue'),
      'description' => t('The total revenue from purchased product items on your property.'),
      'datatype' => 'currency',
    ),
    'localTransactionRevenue' => array(
      'type' => 'metric',
      'group' => t('Ecommerce metrics'),
      'name' => t('Local Revenue'),
      'description' => t('Transaction revenue in local currency.'),
      'datatype' => 'currency',
    ),
    'localTransactionShipping' => array(
      'type' => 'metric',
      'group' => t('Ecommerce metrics'),
      'name' => t('Local Shipping'),
      'description' => t('Transaction shipping cost in local currency.'),
      'datatype' => 'currency',
    ),
    'localTransactionTax' => array(
      'type' => 'metric',
      'group' => t('Ecommerce metrics'),
      'name' => t('Local Tax'),
      'description' => t('Transaction tax in local currency.'),
      'datatype' => 'currency',
    ),
    'localItemRevenue' => array(
      'type' => 'metric',
      'group' => t('Ecommerce metrics'),
      'name' => t('Local Product Revenue'),
      'description' => t('Product revenue in local currency.'),
      'datatype' => 'currency',
    ),
    'buyToDetailRate' => array(
      'type' => 'metric',
      'group' => t('Ecommerce metrics'),
      'name' => t('Buy-to-Detail Rate'),
      'description' => t('Unique purchases divided by views of product detail pages (Enhanced Ecommerce).'),
      'datatype' => 'percent',
    ),
    'cartToDetailRate' => array(
      'type' => 'metric',
      'group' => t('Ecommerce metrics'),
      'name' => t('Cart-to-Detail Rate'),
      'description' => t('Product adds divided by views of product details (Enhanced Ecommerce).'),
      'datatype' => 'percent',
    ),
    'internalPromotionClicks' => array(
      'type' => 'metric',
      'group' => t('Ecommerce metrics'),
      'name' => t('Internal Promotion Clicks'),
      'description' => t('The number of clicks on an internal promotion (Enhanced Ecommerce).'),
      'datatype' => 'integer',
    ),
    'internalPromotionViews' => array(
      'type' => 'metric',
      'group' => t('Ecommerce metrics'),
      'name' => t('Internal Promotion Views'),
      'description' => t('The number of views of an internal promotion (Enhanced Ecommerce).'),
      'datatype' => 'integer',
    ),
    'localProductRefundAmount' => array(
      'type' => 'metric',
      'group' => t('Ecommerce metrics'),
      'name' => t('Local Product Refund Amount'),
      'description' => t('Refund amount for a given product in the local currency (Enhanced Ecommerce).'),
      'datatype' => 'currency',
    ),
    'localRefundAmount' => array(
      'type' => 'metric',
      'group' => t('Ecommerce metrics'),
      'name' => t('Local Refund Amount'),
      'description' => t('Total refund amount for the transaction in the local currency (Enhanced Ecommerce).'),
      'datatype' => 'currency',
    ),
    'productAddsToCart' => array(
      'type' => 'metric',
      'group' => t('Ecommerce metrics'),
      'name' => t('Product Adds To Cart'),
      'description' => t('Number of times the product was added to the shopping cart (Enhanced Ecommerce).'),
      'datatype' => 'integer',
    ),
    'productCheckouts' => array(
      'type' => 'metric',
      'group' => t('Ecommerce metrics'),
      'name' => t('Product Checkouts'),
      'description' => t('Number of times the product was included in the check-out process (Enhanced Ecommerce).'),
      'datatype' => 'integer',
    ),
    'productDetailViews' => array(
      'type' => 'metric',
      'group' => t('Ecommerce metrics'),
      'name' => t('Product Detail Views'),
      'description' => t('Number of times users viewed the product-detail page (Enhanced Ecommerce).'),
      'datatype' => 'integer',
    ),
    'productListClicks' => array(
      'type' => 'metric',
      'group' => t('Ecommerce metrics'),
      'name' => t('Product List Clicks'),
      'description' => t('Number of times users clicked the product when it appeared in the product list (Enhanced Ecommerce).'),
      'datatype' => 'integer',
    ),
    'productListViews' => array(
      'type' => 'metric',
      'group' => t('Ecommerce metrics'),
      'name' => t('Product List Views'),
      'description' => t('Number of times the product appeared in a product list (Enhanced Ecommerce).'),
      'datatype' => 'integer',
    ),
    'productRefundAmount' => array(
      'type' => 'metric',
      'group' => t('Ecommerce metrics'),
      'name' => t('Product Refund Amount'),
      'description' => t('Total refund amount associated with the product (Enhanced Ecommerce).'),
      'datatype' => 'currency',
    ),
    'productRefunds' => array(
      'type' => 'metric',
      'group' => t('Ecommerce metrics'),
      'name' => t('Product Refunds'),
      'description' => t('Number of times a refund was issued for the product (Enhanced Ecommerce).'),
      'datatype' => 'integer',
    ),
    'productRemovesFromCart' => array(
      'type' => 'metric',
      'group' => t('Ecommerce metrics'),
      'name' => t('Product Removes From Cart'),
      'description' => t('Number of times the product was removed from shopping cart (Enhanced Ecommerce).'),
      'datatype' => 'integer',
    ),
    'quantityAddedToCart' => array(
      'type' => 'metric',
      'group' => t('Ecommerce metrics'),
      'name' => t('Quantity Added To Cart'),
      'description' => t('Number of product units added to the shopping cart (Enhanced Ecommerce).'),
      'datatype' => 'integer',
    ),
    'quantityCheckedOut' => array(
      'type' => 'metric',
      'group' => t('Ecommerce metrics'),
      'name' => t('Quantity Checked Out'),
      'description' => t('Number of product units included in check out (Enhanced Ecommerce).'),
      'datatype' => 'integer',
    ),
    'quantityRefunded' => array(
      'type' => 'metric',
      'group' => t('Ecommerce metrics'),
      'name' => t('Quantity Refunded'),
      'description' => t('Number of product units refunded (Enhanced Ecommerce).'),
      'datatype' => 'integer',
    ),
    'quantityRemovedFromCart' => array(
      'type' => 'metric',
      'group' => t('Ecommerce metrics'),
      'name' => t('Quantity Removed From Cart'),
      'description' => t('Number of product units removed from cart (Enhanced Ecommerce).'),
      'datatype' => 'integer',
    ),
    'refundAmount' => array(
      'type' => 'metric',
      'group' => t('Ecommerce metrics'),
      'name' => t('Refund Amount'),
      'description' => t('Currency amount refunded for a transaction (Enhanced Ecommerce).'),
      'datatype' => 'currency',
    ),
    'totalRefunds' => array(
      'type' => 'metric',
      'group' => t('Ecommerce metrics'),
      'name' => t('Refunds'),
      'description' => t('Number of refunds that have been issued (Enhanced Ecommerce).'),
      'datatype' => 'integer',
    ),
    // Ecommerce calculated metrics.
    'transactionsPerSession' => array(
      'type' => 'metric',
      'group' => t('Ecommerce calculated metrics'),
      'name' => t('Ecommerce Conversion Rate'),
      'description' => t('The average number of transactions for a session on your property.'),
      'calculation' => 'ga:transactions / ga:sessions',
      'datatype' => 'percent',
    ),
    'revenuePerTransaction' => array(
      'type' => 'metric',
      'group' => t('Ecommerce calculated metrics'),
      'name' => t('Average Order Value'),
      'description' => t('The average revenue for an e-commerce transaction.'),
      'calculation' => 'ga:transactionRevenue / ga:transactions',
      'datatype' => 'currency',
    ),
    'transactionRevenuePerSession' => array(
      'type' => 'metric',
      'group' => t('Ecommerce calculated metrics'),
      'name' => t('Per Session Value'),
      'description' => t('Average transaction revenue for a session on your property.'),
      'calculation' => 'ga:transactionRevenue / ga:session',
      'datatype' => 'currency',
    ),
    'totalValue' => array(
      'type' => 'metric',
      'group' => t('Ecommerce calculated metrics'),
      'name' => t('Total Value'),
      'description' => t('Total value for your property (including total revenue and total goal value).'),
      'calculation' => '(ga:transactionRevenue + ga:goalValueAll)',
      'datatype' => 'currency',
    ),
    'revenuePerItem' => array(
      'type' => 'metric',
      'group' => t('Ecommerce calculated metrics'),
      'name' => t('Average Price'),
      'description' => t('The average revenue per item.'),
      'calculation' => 'ga:itemRevenue / ga:itemQuantity',
      'datatype' => 'currency',
    ),
    'itemsPerPurchase' => array(
      'type' => 'metric',
      'group' => t('Ecommerce calculated metrics'),
      'name' => t('Average QTY'),
      'description' => t('The average quantity of this item (or group of items) sold per purchase.'),
      'calculation' => 'ga:itemQuantity / ga:uniquePurchases',
      'datatype' => 'float',
    ),
    'internalPromotionCTR' => array(
      'type' => 'metric',
      'group' => t('Ecommerce calculated metrics'),
      'name' => t('Internal Promotion CTR'),
      'description' => t('The rate at which users clicked through to view the internal promotion (Enhanced Ecommerce).'),
      'calculation' => 'ga:internalPromotionClicks / ga:internalPromotionViews',
      'datatype' => 'percent',
    ),
    'productListCTR' => array(
      'type' => 'metric',
      'group' => t('Ecommerce calculated metrics'),
      'name' => t('Product List CTR'),
      'description' => t('The rate at which users clicked through on the product in a product list (Enhanced Ecommerce).'),
      'calculation' => 'ga:productListClicks / ga:productListViews',
      'datatype' => 'percent',
    ),
    'productRevenuePerPurchase' => array(
      'type' => 'metric',
      'group' => t('Ecommerce calculated metrics'),
      'name' => t('Product Revenue per Purchase'),
      'description' => t('Average product revenue per purchase (commonly used with Product Coupon Code) (Enhanced Ecommerce).'),
      'calculation' => 'ga:itemRevenue / ga:uniquePurchases',
      'datatype' => 'currency',
    ),
    // Social interactions dimensions.
    'socialInteractionNetwork' => array(
      'type' => 'dimension',
      'group' => t('Social interactions dimensions'),
      'name' => t('Social Source'),
      'description' => t('For social interactions, a value representing the social network being tracked.'),
      'datatype' => 'string',
    ),
    'socialInteractionAction' => array(
      'type' => 'dimension',
      'group' => t('Social interactions dimensions'),
      'name' => t('Social Action'),
      'description' => t('For social interactions, a value representing the social action being tracked (e.g. +1, bookmark).'),
      'datatype' => 'string',
    ),
    'socialInteractionNetworkAction' => array(
      'type' => 'dimension',
      'group' => t('Social interactions dimensions'),
      'name' => t('Social Source and Action'),
      'description' => t('For social interactions, a value representing the concatenation of the socialInteractionNetwork and socialInteractionAction action being tracked at this hit level (e.g. Google: +1).'),
      'datatype' => 'string',
    ),
    'socialInteractionTarget' => array(
      'type' => 'dimension',
      'group' => t('Social interactions dimensions'),
      'name' => t('Social Entity'),
      'description' => t('For social interactions, a value representing the URL (or resource) which receives the social network action.'),
      'datatype' => 'string',
    ),
    'socialEngagementType' => array(
      'type' => 'dimension',
      'group' => t('Social interactions dimensions'),
      'name' => t('Social Type'),
      'description' => t('Engagement type. Possible values are <code>Socially Engaged</code> or <code>Not Socially Engaged</code>.'),
      'datatype' => 'string',
    ),
    // Social interactions metrics.
    'socialInteractions' => array(
      'type' => 'metric',
      'group' => t('Social interactions metrics'),
      'name' => t('Social Actions'),
      'description' => t('The total number of social interactions on your property.'),
      'datatype' => 'integer',
    ),
    'uniqueSocialInteractions' => array(
      'type' => 'metric',
      'group' => t('Social interactions metrics'),
      'name' => t('Unique Social Actions'),
      'description' => t('The number of sessions during which the specified social action(s) occurred at least once. This is based on the the unique combination of <code>socialInteractionNetwork</code>, <code>socialInteractionAction</code>, and <code>socialInteractionTarget</code>.'),
      'datatype' => 'integer',
    ),
    // Social interactions calculated metrics.
    'socialInteractionsPerSession' => array(
      'type' => 'metric',
      'group' => t('Social interactions calculated metrics'),
      'name' => t('Actions Per Social Session'),
      'description' => t('The number of social interactions per session on your property.'),
      'calculation' => 'ga:socialInteractions / ga:uniqueSocialInteractions',
      'datatype' => 'float',
    ),
    // User timings dimensions.
    'userTimingCategory' => array(
      'type' => 'dimension',
      'group' => t('User timings dimensions'),
      'name' => t('Timing Category'),
      'description' => t('A string for categorizing all user timing variables into logical groups for easier reporting purposes.'),
      'datatype' => 'string',
    ),
    'userTimingLabel' => array(
      'type' => 'dimension',
      'group' => t('User timings dimensions'),
      'name' => t('Timing Label'),
      'description' => t("The name of the resource's action being tracked."),
      'datatype' => 'string',
    ),
    'userTimingVariable' => array(
      'type' => 'dimension',
      'group' => t('User timings dimensions'),
      'name' => t('Timing Variable'),
      'description' => t('A value that can be used to add flexibility in visualizing user timings in the reports.'),
      'datatype' => 'string',
    ),
    // User timings metrics.
    'userTimingValue' => array(
      'type' => 'metric',
      'group' => t('User timings metrics'),
      'name' => t('User Timing (ms)'),
      'description' => t('.The total number of milliseconds for a user timing.'),
      'datatype' => 'integer',
    ),
    'userTimingSample' => array(
      'type' => 'metric',
      'group' => t('User timings metrics'),
      'name' => t('User Timing Sample'),
      'description' => t('The number of hits that were sent for a particular <code>userTimingCategory</code>, <code>userTimingLabel</code>, and <code>userTimingVariable</code>.'),
      'datatype' => 'integer',
    ),
    // User timings calculated metrics.
    'avgUserTimingValue' => array(
      'type' => 'metric',
      'group' => t('User timings calculated metrics'),
      'name' => t('Avg. User Timing (sec)'),
      'description' => t('The average amount of elapsed time.'),
      'calculation' => '(ga:userTimingValue / ga:userTimingSample / 1000)',
      'datatype' => 'float',
    ),
    // Exceptions dimensions.
    'exceptionDescription' => array(
      'type' => 'dimension',
      'group' => t('Exceptions dimensions'),
      'name' => t('Exception Description'),
      'description' => t('The description for the exception.'),
      'datatype' => 'string',
    ),
    // Exceptions metrics.
    'exceptions' => array(
      'type' => 'metric',
      'group' => t('Exceptions metrics'),
      'name' => t('Exceptions'),
      'description' => t('The number of exceptions that were sent to Google Analytics.'),
      'datatype' => 'integer',
    ),
    'fatalExceptions' => array(
      'type' => 'metric',
      'group' => t('Exceptions metrics'),
      'name' => t('Crashes'),
      'description' => t('The number of exceptions where isFatal is set to true.'),
      'datatype' => 'integer',
    ),
    // Exceptions calculated metrics.
    'exceptionsPerScreenview' => array(
      'type' => 'metric',
      'group' => t('Exceptions calculated metrics'),
      'name' => t('Exceptions / Screen'),
      'description' => t('The number of exceptions thrown divided by the number of screenviews.'),
      'calculation' => 'ga:exceptions / ga:screenviews',
      'datatype' => 'percent',
    ),
    'fatalExceptionsPerScreenview' => array(
      'type' => 'metric',
      'group' => t('Exceptions calculated metrics'),
      'name' => t('Crashe / Screen'),
      'description' => t('The number of fatal exceptions thrown divided by the number of screenviews.'),
      'calculation' => 'ga:fatalExceptions / ga:screenviews',
      'datatype' => 'percent',
    ),
    // Content experiments dimensions.
    'experimentId' => array(
      'type' => 'dimension',
      'group' => t('Content experiments dimensions'),
      'name' => t('Experiment ID'),
      'description' => t('The user-scoped id of the content experiment that the user was exposed to when the metrics were reported.'),
      'datatype' => 'string',
    ),
    'experimentVariant' => array(
      'type' => 'dimension',
      'group' => t('Content experiments dimensions'),
      'name' => t('Variation'),
      'description' => t('The user-scoped id of the particular variation that the user was exposed to during a content experiment.'),
      'datatype' => 'string',
    ),
    // Custom variables or columns dimensions.
    'dimensionXX' => array(
      'type' => 'dimension',
      'group' => t('Custom variables or columns dimensions'),
      'name' => t('Custom Dimension XX.'),
      'description' => t('The name of the requested custom dimension, where XX refers the number/index of the custom dimension.'),
      'datatype' => 'string',
    ),
    'customVarNameXX' => array(
      'type' => 'dimension',
      'group' => t('Custom variables or columns dimensions'),
      'name' => t('Custom Variable (Key XX)'),
      'description' => t('The name for the requested custom variable.'),
      'datatype' => 'string',
    ),
    'customVarValueXX' => array(
      'type' => 'dimension',
      'group' => t('Custom variables or columns dimensions'),
      'name' => t('Custom Variable (Value XX)'),
      'description' => t('The value for the requested custom variable.'),
      'datatype' => 'string',
    ),
    // Custom variables or columns metrics.
    'metricXX' => array(
      'type' => 'metric',
      'group' => t('Custom variables or columns metrics'),
      'name' => t('Custom Metric XX Value'),
      'description' => t('The name of the requested custom metric, where XX refers the number/index of the custom metric.'),
      'datatype' => 'integer',
    ),
    // Time dimensions.
    'date' => array(
      'type' => 'dimension',
      'group' => t('Time dimensions'),
      'name' => t('Date'),
      'description' => t('The date of the session.'),
      // Original datatype is string.
      'datatype' => 'date',
    ),
    'year' => array(
      'type' => 'dimension',
      'group' => t('Time dimensions'),
      'name' => t('Year'),
      'description' => t('The year of the session. A four-digit year from 2005 to the current year.'),
      'datatype' => 'string',
    ),
    'month' => array(
      'type' => 'dimension',
      'group' => t('Time dimensions'),
      'name' => t('Month of the year'),
      'description' => t('The month of the session. A two digit integer from 01 to 12.'),
      'datatype' => 'string',
    ),
    'week' => array(
      'type' => 'dimension',
      'group' => t('Time dimensions'),
      'name' => t('Week of the Year'),
      'description' => t('The week of the session. A two-digit number from 01 to 53. Each week starts on Sunday.'),
      'datatype' => 'string',
    ),
    'day' => array(
      'type' => 'dimension',
      'group' => t('Time dimensions'),
      'name' => t('Day of the month'),
      'description' => t('The day of the month. A two-digit number from 01 to 31.'),
      'datatype' => 'string',
    ),
    'hour' => array(
      'type' => 'dimension',
      'group' => t('Time dimensions'),
      'name' => t('Hour'),
      'description' => t('A two-digit hour of the day ranging from 00-23 in the timezone configured for the account. This value is also corrected for daylight savings time, adhering to all local rules for daylight savings time. If your timezone follows daylight savings time, there will be an apparent bump in the number of sessions during the change-over hour (e.g. between 1:00 and 2:00) for the day per year when that hour repeats. A corresponding hour with zero sessions will occur at the opposite changeover. (Google Analytics does not track user time more precisely than hours.)'),
      'datatype' => 'string',
    ),
    'minute' => array(
      'type' => 'dimension',
      'group' => t('Time dimensions'),
      'name' => t('Minute'),
      'description' => t('Returns the minute in the hour. The possible values are between 00 and 59.'),
      'datatype' => 'string',
    ),
    'nthMonth' => array(
      'type' => 'dimension',
      'group' => t('Time dimensions'),
      'name' => t('Month Index'),
      'description' => t('Index for each month in the specified date range. Index for the first month in the date range is 0, 1 for the second month, and so on. The index corresponds to month entries.'),
      'datatype' => 'string',
    ),
    'nthWeek' => array(
      'type' => 'dimension',
      'group' => t('Time dimensions'),
      'name' => t('Week Index'),
      'description' => t('Index for each week in the specified date range. Index for the first week in the date range is 0, 1 for the second week, and so on. The index corresponds to week entries.'),
      'datatype' => 'string',
    ),
    'nthDay' => array(
      'type' => 'dimension',
      'group' => t('Time dimensions'),
      'name' => t('Day Index'),
      'description' => t('Index for each day in the specified date range. Index for the first day (i.e., start-date) in the date range is 0, 1 for the second day, and so on.'),
      'datatype' => 'string',
    ),
    'nthMinute' => array(
      'type' => 'dimension',
      'group' => t('Time dimensions'),
      'name' => t('Minute Index'),
      'description' => t('Index for each minute in the specified date range. Index for the first minute of first day (i.e., start-date) in the date range is 0, 1 for the next minute, and so on.'),
      'datatype' => 'string',
    ),
    'dayOfWeek' => array(
      'type' => 'dimension',
      'group' => t('Time dimensions'),
      'name' => t('Day of Week'),
      'description' => t('The day of the week. A one-digit number from 0 (Sunday) to 6 (Saturday).'),
      'datatype' => 'string',
    ),
    'dayOfWeekName' => array(
      'type' => 'dimension',
      'group' => t('Time dimensions'),
      'name' => t('Day of Week Name'),
      'description' => t('The name of the day of the week (in English).'),
      'datatype' => 'string',
    ),
    'dateHour' => array(
      'type' => 'dimension',
      'group' => t('Time dimensions'),
      'name' => t('Hour of Day'),
      'description' => t('Combined values of <code>ga:date</code> and <code>ga:hour</code>.'),
      'datatype' => 'string',
    ),
    'yearMonth' => array(
      'type' => 'dimension',
      'group' => t('Time dimensions'),
      'name' => t('Month of Year'),
      'description' => t('Combined values of <code>ga:year</code> and <code>ga:month</code>.'),
      // Original datatype is string.
      'datatype' => 'date',
    ),
    'yearWeek' => array(
      'type' => 'dimension',
      'group' => t('Time dimensions'),
      'name' => t('Week of Year'),
      'description' => t('Combined values of <code>ga:year</code> and <code>ga:week</code>.'),
      'datatype' => 'string',
    ),
    'isoWeek' => array(
      'type' => 'dimension',
      'group' => t('Time dimensions'),
      'name' => t('ISO Week of the Year'),
      'description' => t('The ISO week number, where each week starts with a Monday. Details: <a href="!url">@url</a>. <code>ga:isoWeek</code> should only be used with <code>ga:isoYear</code> since <code>ga:year</code> represents gregorian calendar.', array('@url' => 'http://en.wikipedia.org/wiki/ISO_week_date')),
      'datatype' => 'string',
    ),
    'isoYear' => array(
      'type' => 'dimension',
      'group' => t('Time dimensions'),
      'name' => t('ISO Year'),
      'description' => t('Year. The ISO year of the session. Details: <a href="!url">@url</a>. ga:isoYear should only be used with <code>ga:isoWeek</code> since <code>ga:week</code> represents gregorian calendar.', array('@url' => 'http://en.wikipedia.org/wiki/ISO_week_date')),
      'datatype' => 'string',
    ),
    'isoYearIsoWeek' => array(
      'type' => 'dimension',
      'group' => t('Time dimensions'),
      'name' => t('ISO Week of ISO Year'),
      'description' => t('Combined values of <code>ga:isoYear</code> and <code>ga:isoWeek</code>.'),
      'datatype' => 'string',
    ),
    'nthHour' => array(
      'type' => 'dimension',
      'group' => t('Time dimensions'),
      'name' => t('Hour Index'),
      'description' => t('Index for each hour in the specified date range. Index for the first hour of first day (i.e., start-date) in the date range is 0, 1 for the next hour, and so on.'),
      'datatype' => 'string',
    ),
    // DoubleClick Campaign Manager dimensions.
    'dcmClickAd' => array(
      'type' => 'dimension',
      'group' => t('DoubleClick campaign manager dimensions'),
      'name' => t('DFA Ad (GA Model)'),
      'description' => t('DCM ad name of the DCM click matching the Google Analytics session (premium only).'),
      'datatype' => 'string',
    ),
    'dcmClickAdId' => array(
      'type' => 'dimension',
      'group' => t('DoubleClick campaign manager dimensions'),
      'name' => t('DFA Ad ID (GA Model)'),
      'description' => t('DCM ad ID of the DCM click matching the Google Analytics session (premium only).'),
      'datatype' => 'string',
    ),
    'dcmClickAdType' => array(
      'type' => 'dimension',
      'group' => t('DoubleClick campaign manager dimensions'),
      'name' => t('DFA Ad Type (GA Model)'),
      'description' => t('DCM ad type name of the DCM click matching the Google Analytics session (premium only).'),
      'datatype' => 'string',
    ),
    'dcmClickAdTypeId' => array(
      'type' => 'dimension',
      'group' => t('DoubleClick campaign manager dimensions'),
      'name' => t('DFA Ad Type ID'),
      'description' => t('DCM ad type ID of the DCM click matching the Google Analytics session (premium only).'),
      'datatype' => 'string',
    ),
    'dcmClickAdvertiser' => array(
      'type' => 'dimension',
      'group' => t('DoubleClick campaign manager dimensions'),
      'name' => t('DFA Advertiser (GA Model)'),
      'description' => t('DCM advertiser name of the DCM click matching the Google Analytics session (premium only).'),
      'datatype' => 'string',
    ),
    'dcmClickAdvertiserId' => array(
      'type' => 'dimension',
      'group' => t('DoubleClick campaign manager dimensions'),
      'name' => t('DFA Advertiser ID (GA Model)'),
      'description' => t('DCM advertiser ID of the DCM click matching the Google Analytics session (premium only).'),
      'datatype' => 'string',
    ),
    'dcmClickCampaign' => array(
      'type' => 'dimension',
      'group' => t('DoubleClick campaign manager dimensions'),
      'name' => t('DFA Campaign (GA Model)'),
      'description' => t('DCM campaign name of the DCM click matching the Google Analytics session (premium only).'),
      'datatype' => 'string',
    ),
    'dcmClickCampaignId' => array(
      'type' => 'dimension',
      'group' => t('DoubleClick campaign manager dimensions'),
      'name' => t('DFA Campaign ID (GA Model)'),
      'description' => t('DCM campaign ID of the DCM click matching the Google Analytics session (premium only).'),
      'datatype' => 'string',
    ),
    'dcmClickCreativeId' => array(
      'type' => 'dimension',
      'group' => t('DoubleClick campaign manager dimensions'),
      'name' => t('DFA Creative ID (GA Model)'),
      'description' => t('DCM creative ID of the DCM click matching the Google Analytics session (premium only).'),
      'datatype' => 'string',
    ),
    'dcmClickCreative' => array(
      'type' => 'dimension',
      'group' => t('DoubleClick campaign manager dimensions'),
      'name' => t('DFA Creative (GA Model)'),
      'description' => t('DCM creative name of the DCM click matching the Google Analytics session (premium only).'),
      'datatype' => 'string',
    ),
    'dcmClickRenderingId' => array(
      'type' => 'dimension',
      'group' => t('DoubleClick campaign manager dimensions'),
      'name' => t('DFA Rendering ID (GA Model)'),
      'description' => t('DCM rendering ID of the DCM click matching the Google Analytics session (premium only).'),
      'datatype' => 'string',
    ),
    'dcmClickCreativeType' => array(
      'type' => 'dimension',
      'group' => t('DoubleClick campaign manager dimensions'),
      'name' => t('DFA Creative Type (GA Model)'),
      'description' => t('DCM creative type name of the DCM click matching the Google Analytics session (premium only).'),
      'datatype' => 'string',
    ),
    'dcmClickCreativeTypeId' => array(
      'type' => 'dimension',
      'group' => t('DoubleClick campaign manager dimensions'),
      'name' => t('DFA Creative Type ID (GA Model)'),
      'description' => t('DCM creative type ID of the DCM click matching the Google Analytics session (premium only).'),
      'datatype' => 'string',
    ),
    'dcmClickCreativeVersion' => array(
      'type' => 'dimension',
      'group' => t('DoubleClick campaign manager dimensions'),
      'name' => t('DFA Creative Version (GA Model)'),
      'description' => t('DCM creative version of the DCM click matching the Google Analytics session (premium only).'),
      'datatype' => 'string',
    ),
    'dcmClickSite' => array(
      'type' => 'dimension',
      'group' => t('DoubleClick campaign manager dimensions'),
      'name' => t('DFA Site (GA Model)'),
      'description' => t('Site name where the DCM creative was shown and clicked on for the DCM click matching the Google Analytics session (premium only).'),
      'datatype' => 'string',
    ),
    'dcmClickSiteId' => array(
      'type' => 'dimension',
      'group' => t('DoubleClick campaign manager dimensions'),
      'name' => t('DFA Site ID (GA Model)'),
      'description' => t('DCM site ID where the DCM creative was shown and clicked on for the DCM click matching the Google Analytics session (premium only).'),
      'datatype' => 'string',
    ),
    'dcmClickSitePlacement' => array(
      'type' => 'dimension',
      'group' => t('DoubleClick campaign manager dimensions'),
      'name' => t('DFA Placement (GA Model)'),
      'description' => t('DCM site placement name of the DCM click matching the Google Analytics session (premium only).'),
      'datatype' => 'string',
    ),
    'dcmClickSitePlacementId' => array(
      'type' => 'dimension',
      'group' => t('DoubleClick campaign manager dimensions'),
      'name' => t('DFA Placement ID (GA Model)'),
      'description' => t('DCM site placement ID of the DCM click matching the Google Analytics session (premium only).'),
      'datatype' => 'string',
    ),
    'dcmClickSpotId' => array(
      'type' => 'dimension',
      'group' => t('DoubleClick campaign manager dimensions'),
      'name' => t('DFA Floodlight Configuration ID (GA Model)'),
      'description' => t('DCM Floodlight configuration ID of the DCM click matching the Google Analytics session (premium only).'),
      'datatype' => 'string',
    ),
    'dcmFloodlightActivity' => array(
      'type' => 'dimension',
      'group' => t('DoubleClick campaign manager dimensions'),
      'name' => t('DFA Activity'),
      'description' => t('DCM Floodlight activity name associated with the floodlight conversion (premium only).'),
      'datatype' => 'string',
    ),
    'dcmFloodlightActivityAndGroup' => array(
      'type' => 'dimension',
      'group' => t('DoubleClick campaign manager dimensions'),
      'name' => t('DFA Activity and Group'),
      'description' => t('DCM Floodlight activity name and group name associated with the floodlight conversion (premium only).'),
      'datatype' => 'string',
    ),
    'dcmFloodlightActivityGroup' => array(
      'type' => 'dimension',
      'group' => t('DoubleClick campaign manager dimensions'),
      'name' => t('DFA Activity Group'),
      'description' => t('DCM Floodlight activity group name associated with the floodlight conversion (premium only).'),
      'datatype' => 'string',
    ),
    'dcmFloodlightActivityGroupId' => array(
      'type' => 'dimension',
      'group' => t('DoubleClick campaign manager dimensions'),
      'name' => t('DFA Activity Group ID'),
      'description' => t('DCM Floodlight activity group ID associated with the floodlight conversion (premium only).'),
      'datatype' => 'string',
    ),
    'dcmFloodlightActivityId' => array(
      'type' => 'dimension',
      'group' => t('DoubleClick campaign manager dimensions'),
      'name' => t('DFA Activity ID'),
      'description' => t('DCM Floodlight activity ID associated with the floodlight conversion (premium only).'),
      'datatype' => 'string',
    ),
    'dcmFloodlightAdvertiserId' => array(
      'type' => 'dimension',
      'group' => t('DoubleClick campaign manager dimensions'),
      'name' => t('DFA Advertiser ID'),
      'description' => t('DCM Floodlight advertiser ID associated with the floodlight conversion (premium only).'),
      'datatype' => 'string',
    ),
    'dcmFloodlightSpotId' => array(
      'type' => 'dimension',
      'group' => t('DoubleClick campaign manager dimensions'),
      'name' => t('DFA Floodlight Configuration ID'),
      'description' => t('DCM Floodlight configuration ID associated with the floodlight conversion (premium only).'),
      'datatype' => 'string',
    ),
    'dcmLastEventAd' => array(
      'type' => 'dimension',
      'group' => t('DoubleClick campaign manager dimensions'),
      'name' => t('DFA Ad'),
      'description' => t('DCM ad name of the last DCM event (impression or click within the DCM lookback window) associated with the Google Analytics session (premium only).'),
      'datatype' => 'string',
    ),
    'dcmLastEventAdId' => array(
      'type' => 'dimension',
      'group' => t('DoubleClick campaign manager dimensions'),
      'name' => t('DFA Ad ID (DFA Model)'),
      'description' => t('DCM ad ID of the last DCM event (impression or click within the DCM lookback window) associated with the Google Analytics session (premium only).'),
      'datatype' => 'string',
    ),
    'dcmLastEventAdType' => array(
      'type' => 'dimension',
      'group' => t('DoubleClick campaign manager dimensions'),
      'name' => t('DFA Ad Type (DFA Model)'),
      'description' => t('DCM ad type name of the last DCM event (impression or click within the DCM lookback window) associated with the Google Analytics session (premium only).'),
      'datatype' => 'string',
    ),
    'dcmLastEventAdTypeId' => array(
      'type' => 'dimension',
      'group' => t('DoubleClick campaign manager dimensions'),
      'name' => t('DFA Ad Type ID (DFA Model)'),
      'description' => t('DCM ad type ID of the last DCM event (impression or click within the DCM lookback window) associated with the Google Analytics session (premium only).'),
      'datatype' => 'string',
    ),
    'dcmLastEventAdvertiser' => array(
      'type' => 'dimension',
      'group' => t('DoubleClick campaign manager dimensions'),
      'name' => t('DFA Advertiser (DFA Model)'),
      'description' => t('DCM advertiser name of the last DCM event (impression or click within the DCM lookback window) associated with the Google Analytics session (premium only).'),
      'datatype' => 'string',
    ),
    'dcmLastEventAdvertiserId' => array(
      'type' => 'dimension',
      'group' => t('DoubleClick campaign manager dimensions'),
      'name' => t('DFA Advertiser ID (DFA Model)'),
      'description' => t('DCM advertiser ID of the last DCM event (impression or click within the DCM lookback window) associated with the Google Analytics session (premium only).'),
      'datatype' => 'string',
    ),
    'dcmLastEventAttributionType' => array(
      'type' => 'dimension',
      'group' => t('DoubleClick campaign manager dimensions'),
      'name' => t('DFA Attribution Type (DFA Model)'),
      'description' => t('There are two possible values: ClickThrough and ViewThrough. If the last DCM event associated with the Google Analytics session was a click, then the value will be ClickThrough. If the last DCM event associated with the Google Analytics session was an ad impression, then the value will be ViewThrough (premium only).'),
      'datatype' => 'string',
    ),
    'dcmLastEventCampaign' => array(
      'type' => 'dimension',
      'group' => t('DoubleClick campaign manager dimensions'),
      'name' => t('DFA Campaign (DFA Model)'),
      'description' => t('DCM campaign name of the last DCM event (impression or click within the DCM lookback window) associated with the Google Analytics session (premium only).'),
      'datatype' => 'string',
    ),
    'dcmLastEventCampaignId' => array(
      'type' => 'dimension',
      'group' => t('DoubleClick campaign manager dimensions'),
      'name' => t('DFA Campaign ID (DFA Model)'),
      'description' => t('DCM campaign ID of the last DCM event (impression or click within the DCM lookback window) associated with the Google Analytics session (premium only).'),
      'datatype' => 'string',
    ),
    'dcmLastEventCreativeId' => array(
      'type' => 'dimension',
      'group' => t('DoubleClick campaign manager dimensions'),
      'name' => t('DFA Creative ID (DFA Model)'),
      'description' => t('DCM creative ID of the last DCM event (impression or click within the DCM lookback window) associated with the Google Analytics session (premium only).'),
      'datatype' => 'string',
    ),
    'dcmLastEventCreative' => array(
      'type' => 'dimension',
      'group' => t('DoubleClick campaign manager dimensions'),
      'name' => t('DFA Creative (DFA Model)'),
      'description' => t('DCM creative name of the last DCM event (impression or click within the DCM lookback window) associated with the Google Analytics session (premium only).'),
      'datatype' => 'string',
    ),
    'dcmLastEventRenderingId' => array(
      'type' => 'dimension',
      'group' => t('DoubleClick campaign manager dimensions'),
      'name' => t('DFA Rendering ID (DFA Model)'),
      'description' => t('DCM rendering ID of the last DCM event (impression or click within the DCM lookback window) associated with the Google Analytics session (premium only).'),
      'datatype' => 'string',
    ),
    'dcmLastEventCreativeType' => array(
      'type' => 'dimension',
      'group' => t('DoubleClick campaign manager dimensions'),
      'name' => t('DFA Creative Type (DFA Model)'),
      'description' => t('DCM creative type name of the last DCM event (impression or click within the DCM lookback window) associated with the Google Analytics session (premium only).'),
      'datatype' => 'string',
    ),
    'dcmLastEventCreativeTypeId' => array(
      'type' => 'dimension',
      'group' => t('DoubleClick campaign manager dimensions'),
      'name' => t('DFA Creative Type ID (DFA Model)'),
      'description' => t('DCM creative type ID of the last DCM event (impression or click within the DCM lookback window) associated with the Google Analytics session (premium only).'),
      'datatype' => 'string',
    ),
    'dcmLastEventCreativeVersion' => array(
      'type' => 'dimension',
      'group' => t('DoubleClick campaign manager dimensions'),
      'name' => t('DFA Creative Version (DFA Model)'),
      'description' => t('DCM creative version of the last DCM event (impression or click within the DCM lookback window) associated with the Google Analytics session (premium only).'),
      'datatype' => 'string',
    ),
    'dcmLastEventSite' => array(
      'type' => 'dimension',
      'group' => t('DoubleClick campaign manager dimensions'),
      'name' => t('DFA Site (DFA Model)'),
      'description' => t('Site name where the DCM creative was shown and clicked on for the last DCM event (impression or click within the DCM lookback window) associated with the Google Analytics session (premium only).'),
      'datatype' => 'string',
    ),
    'dcmLastEventSiteId' => array(
      'type' => 'dimension',
      'group' => t('DoubleClick campaign manager dimensions'),
      'name' => t('DFA Site ID (DFA Model)'),
      'description' => t('DCM site ID where the DCM creative was shown and clicked on for the last DCM event (impression or click within the DCM lookback window) associated with the Google Analytics session (premium only).'),
      'datatype' => 'string',
    ),
    'dcmLastEventSitePlacement' => array(
      'type' => 'dimension',
      'group' => t('DoubleClick campaign manager dimensions'),
      'name' => t('DFA Placement (DFA Model)'),
      'description' => t('DCM site placement name of the last DCM event (impression or click within the DCM lookback window) associated with the Google Analytics session (premium only).'),
      'datatype' => 'string',
    ),
    'dcmLastEventSitePlacementId' => array(
      'type' => 'dimension',
      'group' => t('DoubleClick campaign manager dimensions'),
      'name' => t('DFA Placement ID (DFA Model)'),
      'description' => t('DCM site placement ID of the last DCM event (impression or click within the DCM lookback window) associated with the Google Analytics session (premium only).'),
      'datatype' => 'string',
    ),
    'dcmLastEventSpotId' => array(
      'type' => 'dimension',
      'group' => t('DoubleClick campaign manager dimensions'),
      'name' => t('DFA Floodlight Configuration ID (DFA Model)'),
      'description' => t('DCM Floodlight configuration ID of the last DCM event (impression or click within the DCM lookback window) associated with the Google Analytics session (premium only).'),
      'datatype' => 'string',
    ),
    // DoubleClick Campaign Manager metrics.
    'dcmFloodlightQuantity' => array(
      'type' => 'metric',
      'group' => t('DoubleClick campaign manager metrics'),
      'name' => t('DFA Conversions'),
      'description' => t('The number of DCM Floodlight conversions (premium only).'),
      'datatype' => 'integer',
    ),
    'dcmFloodlightRevenue' => array(
      'type' => 'metric',
      'group' => t('DoubleClick campaign manager metrics'),
      'name' => t('DFA Revenue'),
      'description' => t('DCM Floodlight revenue (premium only).'),
      'datatype' => 'currency',
    ),
    'dcmCPC' => array(
      'type' => 'metric',
      'group' => t('DoubleClick campaign manager metrics'),
      'name' => t('DFA CPC'),
      'description' => t('DCM Cost Per Click (premium only).'),
      'datatype' => 'currency',
    ),
    'dcmCTR' => array(
      'type' => 'metric',
      'group' => t('DoubleClick campaign manager metrics'),
      'name' => t('DFA CTR'),
      'description' => t('DCM Click Through Rate (premium only).'),
      'datatype' => 'percent',
    ),
    'dcmClicks' => array(
      'type' => 'metric',
      'group' => t('DoubleClick campaign manager metrics'),
      'name' => t('DFA Clicks'),
      'description' => t('DCM Total Clicks (premium only).'),
      'datatype' => 'integer',
    ),
    'dcmCost' => array(
      'type' => 'metric',
      'group' => t('DoubleClick campaign manager metrics'),
      'name' => t('DFA Cost'),
      'description' => t('DCM Total Cost (premium only).'),
      'datatype' => 'currency',
    ),
    'dcmImpressions' => array(
      'type' => 'metric',
      'group' => t('DoubleClick campaign manager metrics'),
      'name' => t('DFA Impressions'),
      'description' => t('DCM Total Impressions (premium only).'),
      'datatype' => 'integer',
    ),
    'dcmMargin' => array(
      'type' => 'metric',
      'group' => t('DoubleClick campaign manager metrics'),
      'name' => t('DFA Impressions'),
      'description' => t('DCM Total Impressions (premium only).'),
      'datatype' => 'percent',
    ),
    'dcmROI' => array(
      'type' => 'metric',
      'group' => t('DoubleClick campaign manager metrics'),
      'name' => t('DFA ROI'),
      'description' => t('DCM Return On Investment (premium only).'),
      'datatype' => 'percent',
    ),
    'dcmRPC' => array(
      'type' => 'metric',
      'group' => t('DoubleClick campaign manager metrics'),
      'name' => t('DFA RPC'),
      'description' => t('DCM Revenue Per Click (premium only).'),
      'datatype' => 'currency',
    ),
    // Audience dimensions.
    'userAgeBracket' => array(
      'type' => 'dimension',
      'group' => t('Audience dimensions'),
      'name' => t('Age'),
      'description' => t('Age bracket of user.'),
      'datatype' => 'string',
    ),
    'userGender' => array(
      'type' => 'dimension',
      'group' => t('Audience dimensions'),
      'name' => t('Gender'),
      'description' => t('Gender of user.'),
      'datatype' => 'string',
    ),
    'interestOtherCategory' => array(
      'type' => 'dimension',
      'group' => t('Audience dimensions'),
      'name' => t('Other Category'),
      'description' => t('Indicates that users are more likely to be interested in learning about the specified category, and more likely to be ready to purchase.'),
      'datatype' => 'string',
    ),
    'interestAffinityCategory' => array(
      'type' => 'dimension',
      'group' => t('Audience dimensions'),
      'name' => t('Affinity Category (reach)'),
      'description' => t('Indicates that users are more likely to be interested in learning about the specified category.'),
      'datatype' => 'string',
    ),
    'interestInMarketCategory' => array(
      'type' => 'dimension',
      'group' => t('Audience dimensions'),
      'name' => t('In-Market Segment'),
      'description' => t('Indicates that users are more likely to be ready to purchase products or services in the specified category.'),
      'datatype' => 'string',
    ),
    // Adsense metrics.
    'adsenseRevenue' => array(
      'type' => 'metric',
      'group' => t('Adsense metrics'),
      'name' => t('AdSense Revenue'),
      'description' => t('The total revenue from AdSense ads.'),
      'datatype' => 'currency',
    ),
    'adsenseAdUnitsViewed' => array(
      'type' => 'metric',
      'group' => t('Adsense metrics'),
      'name' => t('AdSense Ad Units Viewed'),
      'description' => t('The number of AdSense ad units viewed. An Ad unit is a set of ads displayed as a result of one piece of the AdSense ad code. Details: <a href="!url">@url</a>.', array('@url' => 'https://support.google.com/adsense/answer/32715')),
      'datatype' => 'integer',
    ),
    'adsenseAdsViewed' => array(
      'type' => 'metric',
      'group' => t('Adsense metrics'),
      'name' => t('AdSense Impressions'),
      'description' => t('The number of AdSense ads viewed. Multiple ads can be displayed within an Ad Unit.'),
      'datatype' => 'integer',
    ),
    'adsenseAdsClicks' => array(
      'type' => 'metric',
      'group' => t('Adsense metrics'),
      'name' => t('AdSense Ads Clicked'),
      'description' => t('The number of times AdSense ads on your site were clicked.'),
      'datatype' => 'integer',
    ),
    'adsensePageImpressions' => array(
      'type' => 'metric',
      'group' => t('Adsense metrics'),
      'name' => t('AdSense Page Impressions'),
      'description' => t('The number of pageviews during which an AdSense ad was displayed. A page impression can have multiple Ad Units.'),
      'datatype' => 'integer',
    ),
    'adsenseExits' => array(
      'type' => 'metric',
      'group' => t('Adsense metrics'),
      'name' => t('AdSense Exits'),
      'description' => t('The number of sessions that ended due to a user clicking on an AdSense ad.'),
      'datatype' => 'integer',
    ),
    'adsenseViewableImpressionPercent' => array(
      'type' => 'metric',
      'group' => t('Adsense metrics'),
      'name' => t('AdSense Viewable Impression %'),
      'description' => t('The percentage of impressions that were viewable.'),
      'datatype' => 'percent',
    ),
    'adsenseCoverage' => array(
      'type' => 'metric',
      'group' => t('Adsense metrics'),
      'name' => t('AdSense Coverage'),
      'description' => t('The percentage of ad requests that returned at least one ad.'),
      'datatype' => 'percent',
    ),
    // Adsense calculated metrics.
    'adsenseCTR' => array(
      'type' => 'metric',
      'group' => t('Adsense calculated metrics'),
      'name' => t('AdSense CTR'),
      'description' => t('The percentage of page impressions that resulted in a click on an AdSense ad.'),
      'calculation' => 'ga:adsenseAdsClicks/ga:adsensePageImpressions',
      'datatype' => 'percent',
    ),
    'adsenseECPM' => array(
      'type' => 'metric',
      'group' => t('Adsense calculated metrics'),
      'name' => t('AdSense eCPM'),
      'description' => t('The estimated cost per thousand page impressions. It is your AdSense Revenue per 1000 page impressions.'),
      'calculation' => 'ga:adsenseRevenue/(ga:adsensePageImpressions/1000)',
      'datatype' => 'currency',
    ),
    // Channel grouping dimensions.
    'channelGrouping' => array(
      'type' => 'dimension',
      'group' => t('Channel grouping dimensions'),
      'name' => t('Default Channel Grouping'),
      'description' => t('The default channel grouping that is shared within the View (Profile).'),
      'datatype' => 'string',
    ),
    // Related products dimensions.
    'correlationModelId' => array(
      'type' => 'dimension',
      'group' => t('Related products dimensions'),
      'name' => t('Correlation Model ID'),
      'description' => t('Correlation Model ID for related products.'),
      'datatype' => 'string',
    ),
    'queryProductId' => array(
      'type' => 'dimension',
      'group' => t('Related products dimensions'),
      'name' => t('Queried Product ID'),
      'description' => t('ID of the product being queried.'),
      'datatype' => 'string',
    ),
    'queryProductName' => array(
      'type' => 'dimension',
      'group' => t('Related products dimensions'),
      'name' => t('Queried Product Name'),
      'description' => t('Name of the product being queried.'),
      'datatype' => 'string',
    ),
    'queryProductVariation' => array(
      'type' => 'dimension',
      'group' => t('Related products dimensions'),
      'name' => t('Queried Product Variation'),
      'description' => t('Variation of the product being queried.'),
      'datatype' => 'string',
    ),
    'relatedProductId' => array(
      'type' => 'dimension',
      'group' => t('Related products dimensions'),
      'name' => t('Related Product ID'),
      'description' => t('ID of the related product.'),
      'datatype' => 'string',
    ),
    'relatedProductName' => array(
      'type' => 'dimension',
      'group' => t('Related products dimensions'),
      'name' => t('Related Product Name'),
      'description' => t('Name of the related product.'),
      'datatype' => 'string',
    ),
    'relatedProductVariation' => array(
      'type' => 'dimension',
      'group' => t('Related products dimensions'),
      'name' => t('Related Product Variation'),
      'description' => t('Variation of the related product.'),
      'datatype' => 'string',
    ),
    // Related products metrics.
    'correlationScore' => array(
      'type' => 'metric',
      'group' => t('Related products metrics'),
      'name' => t('Correlation Score'),
      'description' => t('Correlation Score for related products.'),
      'datatype' => 'currency',
    ),
    'queryProductQuantity' => array(
      'type' => 'metric',
      'group' => t('Related products metrics'),
      'name' => t('Queried Product Quantity'),
      'description' => t('Quantity of the product being queried.'),
      'datatype' => 'integer',
    ),
    'relatedProductQuantity' => array(
      'type' => 'metric',
      'group' => t('Related products metrics'),
      'name' => t('Related Product Quantity'),
      'description' => t('Quantity of the related product.'),
      'datatype' => 'integer',
    ),

  );

}

/**
 * Determines if a field is custom or not.
 */
function google_analytics_reports_views_is_custom($field) {
  return preg_match('/XX/', $field) ? TRUE : FALSE;
}

/**
 * Converts a base custom field name and number into a specific field name.
 */
function google_analytics_reports_views_custom_to_variable_field($field, $number) {
  return preg_replace('/XX/', $number, $field);
}

/**
 * Converts a specific field name into a base custom field name.
 */
function google_analytics_reports_views_variable_to_custom_field($field) {
  return preg_replace('/\d/', 'XX', $field);
}
