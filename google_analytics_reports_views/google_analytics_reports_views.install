<?php

/**
 * @file
 * Contains install and update functions for Google Analytics Reports Views
 * module.
 */

/**
 * Implements hook_install().
 */
function google_analytics_reports_views_install() {
  db_update('system')
    ->fields(array('weight' => 11))
    ->condition('name', 'google_analytics_reports_views', '=')
    ->execute();
}


/**
 * Divide start_end filter into two start_date and end_date filters.
 */
function google_analytics_reports_views_update_7300() {

  // Find all Google Analytics views.
  $ga_views = db_select('views_view', 'v')
    ->fields('v', array('vid'))
    ->condition('base_table', 'google_analytics')
    ->execute()
    ->fetchAll();

  foreach ($ga_views as $ga_view) {
    // Find all displays settings.
    $ga_views_displays = db_select('views_display', 'v')
      ->fields('v', array('id', 'display_options'))
      ->condition('vid', $ga_view->vid)
      ->execute()
      ->fetchAll();

    if ($ga_views_displays) {
      foreach ($ga_views_displays as $ga_views_display) {
        $display_options = unserialize($ga_views_display->display_options);

        // If view has start_end filter.
        if (isset($display_options['filters']['start_end'])) {

          // Copy start_end filter into start_date and end_date filters.
          $start_date = $end_date = $start_end = $display_options['filters']['start_end'];

          $start_date['operator'] = $end_date['operator'] = '=';
          $start_date['value']['min'] = $end_date['value']['min'] = '';
          $start_date['value']['max'] = $end_date['value']['max'] = '';
          $start_date['value']['value'] = $start_end['value']['max'];
          $start_date['id'] = $start_date['field'] = 'start_date';

          $end_date['value']['value'] = $start_end['value']['min'];
          $end_date['id'] = $end_date['field'] = 'end_date';

          unset($display_options['filters']['start_end']);
          $display_options['filters']['start_date'] = $start_date;
          $display_options['filters']['end_date'] = $end_date;

          $display_options = serialize($display_options);

          db_update('views_display')
            ->fields(array('display_options' => $display_options))
            ->condition('vid', $ga_view->vid)
            ->condition('id', $ga_views_display->id)
            ->execute();
        }

      }

    }

  }
}

/**
 * Convert datapoins with (n) in name into datapoints with XX.
 */
function google_analytics_reports_views_update_7301() {
  // Find all Google Analytics views.
  $ga_views = db_select('views_view', 'v')
    ->fields('v', array('vid'))
    ->condition('base_table', 'google_analytics')
    ->execute()
    ->fetchAll();

  foreach ($ga_views as $ga_view) {
    // Find all displays settings.
    $ga_views_displays = db_select('views_display', 'v')
      ->fields('v', array('id', 'display_options'))
      ->condition('vid', $ga_view->vid)
      ->execute()
      ->fetchAll();

    if ($ga_views_displays) {
      foreach ($ga_views_displays as $ga_views_display) {

        // Convert (n) into XX.
        $replaced_data = str_replace('(n)', 'XX', $ga_views_display->display_options);

        // Fix serialize data.
        // See http://stackoverflow.com/a/21389439/3365600.
        $fixed_data = preg_replace_callback('!s:(\d+):"(.*?)";!', function($match) {
          return ($match[1] == strlen($match[2])) ? $match[0] : 's:' . strlen($match[2]) . ':"' . $match[2] . '";';
        }, $replaced_data);

        db_update('views_display')
          ->fields(array('display_options' => $fixed_data))
          ->condition('vid', $ga_view->vid)
          ->condition('id', $ga_views_display->id)
          ->execute();

      }

    }

  }
}

/**
 * Replace deprecated datapoins with new ones.
 */
function google_analytics_reports_views_update_7302() {
  // Find all Google Analytics views.
  $ga_views = db_select('views_view', 'v')
    ->fields('v', array('vid'))
    ->condition('base_table', 'google_analytics')
    ->execute()
    ->fetchAll();

  foreach ($ga_views as $ga_view) {
    // Find all displays settings.
    $ga_views_displays = db_select('views_display', 'v')
      ->fields('v', array('id', 'display_options'))
      ->condition('vid', $ga_view->vid)
      ->execute()
      ->fetchAll();

    if ($ga_views_displays) {
      foreach ($ga_views_displays as $ga_views_display) {

        $old_datapoins = array(
          'visitorType',
          'visitCount',
          'daysSinceLastVisit',
          'visitors',
          'newVisits',
          'percentNewVisits',
          'visitLength',
          'visits',
          'timeOnSite',
          'entranceBounceRate',
          'visitBounceRate',
          'avgTimeOnSite',
          'goalValuePerVisit',
          'pageviewsPerVisit',
          'searchVisits',
          'percentVisitsWithSearch',
          'visitsWithEvent',
          'eventsPerVisitWithEvent',
          'visitsToTransaction',
          'transactionsPerVisit',
          'transactionRevenuePerVisit',
          'socialInteractionsPerVisit',
          'visitorAgeBracket',
          'visitorGender',
        );

        $new_datapoints = array(
          'userType',
          'sessionCount',
          'daysSinceLastSession',
          'users',
          'newUsers',
          'percentNewSessions',
          'sessionDurationBucket',
          'sessions',
          'sessionDuration',
          'bounceRate',
          'bounceRate',
          'avgSessionDuration',
          'goalValuePerSession',
          'pageviewsPerSession',
          'searchSessions',
          'percentSessionsWithSearch',
          'sessionsWithEvent',
          'eventsPerSessionWithEvent',
          'sessionsToTransaction',
          'transactionsPerSession',
          'transactionRevenuePerSession',
          'socialInteractionsPerSession',
          'userAgeBracket',
          'userGender',
        );

        // Replace deprecated datapoins with new ones.
        $replaced_data = str_replace($old_datapoins, $new_datapoints, $ga_views_display->display_options);

        // Fix serialize data.
        // See http://stackoverflow.com/a/21389439/3365600.
        $fixed_data = preg_replace_callback('!s:(\d+):"(.*?)";!', function($match) {
          return ($match[1] == strlen($match[2])) ? $match[0] : 's:' . strlen($match[2]) . ':"' . $match[2] . '";';
        }, $replaced_data);

        db_update('views_display')
          ->fields(array('display_options' => $fixed_data))
          ->condition('vid', $ga_view->vid)
          ->condition('id', $ga_views_display->id)
          ->execute();

      }

    }

  }
}
